(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{4239:(e,n,t)=>{Promise.resolve().then(t.bind(t,73384))},73384:(e,n,t)=>{"use strict";t.d(n,{default:()=>eC});var a=t(95155),r=t(12115);let o=async e=>{try{let n=await fetch("/callback/".concat(e),{method:"GET",headers:{"Content-Type":"application/json"}});if(!n.ok)throw Error("HTTP error! status: ".concat(n.status));return(await n.json()).data}catch(e){throw console.error("Error fetching callback data:",e),e}},i=async(e,n)=>{try{let t=await fetch("/callback/".concat(e),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!t.ok)throw Error("HTTP error! status: ".concat(t.status));return await t.json()}catch(e){throw console.error("Error posting callback:",e),e}},s=async(e,n)=>{try{let t=await fetch("/fix-code-error/".concat(e),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!t.ok){let e=await t.json();throw Error(e.message||"HTTP error! status: ".concat(t.status))}return(await t.json()).data}catch(e){throw console.error("Error fixing code error:",e),e}};var l=t(52596),c=t(39688);function d(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return(0,c.QP)((0,l.$)(n))}function m(e){return e?e.replace(/```tsx\n|```\n|```/g,""):""}var p=t(6874),f=t.n(p),u=t(62098),g=t(93509),v=t(51362),b=t(99708);let h=(0,t(74466).F)("inline-flex items-center justify-center whitespace-nowrap rounded-lg text-sm font-medium transition-colors outline-offset-2 focus-visible:outline focus-visible:outline-2 focus-visible:outline-ring/70 disabled:opacity-50 disabled:pointer-events-none disabled:border-primary/75 disabled:shadow-[inset_0_0.5px_0.5px_rgba(255,255,255,0.15)] [&_svg]:pointer-events-none [&_svg]:shrink-0",{variants:{variant:{default:"relative cursor-pointer space-x-2 font-regular ease-out duration-200 outline-0 focus-visible:outline-4 focus-visible:outline-offset-1 border bg-gradient-to-b from-[hsl(var(--primary-gradient-start))] to-[hsl(var(--primary-gradient-end))] hover:opacity-90 text-primary-foreground dark:text-foreground border-[hsl(var(--primary-gradient-start))] focus-visible:outline-[hsl(var(--primary-gradient-start))] data-[state=open]:opacity-90 data-[state=open]:outline-[hsl(var(--primary-gradient-start))]",destructive:"bg-destructive text-destructive-foreground shadow-sm shadow-black/5 hover:bg-destructive/90",outline:"border border-input bg-background shadow-sm shadow-black/5 hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground shadow-sm shadow-black/5 hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{sm:"h-8 rounded-lg px-3",default:"h-8 rounded-lg px-3",lg:"h-10 rounded-lg px-8",icon:"h-8 w-8"}},defaultVariants:{variant:"default",size:"default"}}),x=r.forwardRef((e,n)=>{let{className:t,variant:r,size:o,asChild:i=!1,...s}=e,l=i?b.DX:"button";return(0,a.jsx)(l,{className:d(h({variant:r,size:o,className:t})),ref:n,...s})});x.displayName="Button";var R=t(37619);function y(e){let{fill:n="currentColor",className:t=""}=e,r=(0,a.jsxs)("svg",{width:24,height:24,viewBox:"0 0 60 60",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,a.jsx)("path",{d:"M0 20C0 8.95431 8.95431 0 20 0C31.0457 0 40 8.95431 40 20C40 31.0457 31.5 35.5 20 40H40C40 51.0457 31.0457 60 20 60C8.95431 60 0 51.0457 0 40C0 28.9543 9.5 22 20 20H0Z",fill:n}),(0,a.jsx)("path",{d:"M40 60C51.7324 55.0977 60 43.5117 60 30C60 16.4883 51.7324 4.90234 40 0V60Z",fill:n})]});return(0,a.jsx)("a",{href:"https://21st.dev",target:"_blank",className:d("w-5 h-5 flex items-center justify-center rounded-full",t),children:r})}let N=()=>(0,a.jsx)("svg",{"data-testid":"geist-icon",height:"16",strokeLinejoin:"round",viewBox:"0 0 16 16",width:"16",className:"h-2.5 w-2.5",children:(0,a.jsx)("path",{fillRule:"evenodd",clipRule:"evenodd",d:"M13.5 3V2.25H15V3V10C15 10.5523 14.5523 11 14 11H3.56068L5.53035 12.9697L6.06068 13.5L5.00002 14.5607L4.46969 14.0303L1.39647 10.9571C1.00595 10.5666 1.00595 9.93342 1.39647 9.54289L4.46969 6.46967L5.00002 5.93934L6.06068 7L5.53035 7.53033L3.56068 9.5H13.5V3Z",fill:"currentColor"})});function P(e){let{focusedVariant:n,onAccept:t,fullscreenVariant:o}=e,{resolvedTheme:i,setTheme:s}=(0,v.D)(),[l,c]=(0,r.useState)(!1);(0,r.useEffect)(()=>{c(!0)},[]);let m=l?i:"light",p=null!=o?o:n;return(0,a.jsx)("header",{className:d("border-b border-border/40 z-50 relative bg-background"),children:(0,a.jsx)("div",{className:"container mx-auto px-[var(--container-x-padding)] max-w-[3680px] [--container-x-padding:20px] min-720:[--container-x-padding:24px] min-1280:[--container-x-padding:32px] min-1536:[--container-x-padding:80px]",children:(0,a.jsxs)("div",{className:"flex h-14 items-center justify-between py-0",children:[(0,a.jsxs)("div",{className:"flex items-center gap-2 text-sm",children:[(0,a.jsx)(y,{}),(0,a.jsx)("span",{className:"text-muted-foreground",children:"/"}),(0,a.jsx)("span",{className:"font-medium",children:"Magic"}),(0,a.jsx)("span",{className:"text-muted-foreground",children:"/"}),(0,a.jsxs)("span",{className:"text-muted-foreground",children:["Component generations",null!=o&&(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("span",{className:"text-muted-foreground",children:" / "}),(0,a.jsxs)("span",{className:"text-muted-foreground",children:["Variant ",o]})]})]})]}),(0,a.jsxs)("div",{className:"flex items-center gap-2",children:[(0,a.jsxs)("fieldset",{className:"flex items-center rounded-full border border-border/40 bg-background",children:[(0,a.jsx)("legend",{className:"sr-only",children:"Select a display theme:"}),(0,a.jsxs)("span",{children:[(0,a.jsx)("input",{type:"radio",id:"theme-switch-light",value:"light",name:"theme",className:"sr-only peer",checked:"light"===m,onChange:()=>s("light")}),(0,a.jsxs)("label",{htmlFor:"theme-switch-light",className:"inline-flex items-center justify-center rounded-full p-1.5 text-sm cursor-pointer text-muted-foreground hover:text-foreground peer-checked:bg-accent peer-checked:text-foreground",children:[(0,a.jsx)("span",{className:"sr-only",children:"light"}),(0,a.jsx)(u.A,{className:"h-4 w-4"})]})]}),(0,a.jsxs)("span",{children:[(0,a.jsx)("input",{type:"radio",id:"theme-switch-dark",value:"dark",name:"theme",className:"sr-only peer",checked:"dark"===m,onChange:()=>s("dark")}),(0,a.jsxs)("label",{htmlFor:"theme-switch-dark",className:"inline-flex items-center justify-center rounded-full p-1.5 text-sm cursor-pointer text-muted-foreground hover:text-foreground peer-checked:bg-accent peer-checked:text-foreground",children:[(0,a.jsx)("span",{className:"sr-only",children:"dark"}),(0,a.jsx)(g.A,{className:"h-4 w-4"})]})]})]}),(0,a.jsx)(f(),{href:"https://discord.gg/Qx4rFunHfm",target:"_blank",children:(0,a.jsx)(x,{variant:"outline",children:"Report a bug"})}),(0,a.jsxs)(x,{onClick:t,className:"gap-1 justify-between pr-1.5",children:[(0,a.jsxs)("span",{className:"flex items-center gap-1",children:["Accept Variant",(0,a.jsx)(R.Ay,{value:p,className:"min-w-[10px] flex items-center justify-start"})]}),(0,a.jsx)("kbd",{className:"pointer-events-none h-5 select-none items-center gap-1 rounded border border-white/20 bg-white/10 px-1.5 font-sans text-[11px] leading-none opacity-100 flex",children:(0,a.jsx)(N,{})})]})]})]})})})}let C=r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("rounded-lg border bg-card text-card-foreground shadow-sm",t),...r})});C.displayName="Card",r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("flex flex-col space-y-1.5 p-6",t),...r})}).displayName="CardHeader",r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("text-2xl font-semibold leading-none tracking-tight",t),...r})}).displayName="CardTitle",r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("text-sm text-muted-foreground",t),...r})}).displayName="CardDescription";let w=r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("p-6 pt-0",t),...r})});w.displayName="CardContent",r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)("div",{ref:n,className:d("flex items-center p-6 pt-0",t),...r})}).displayName="CardFooter";var S=t(24357),T=t(92657),M=t(29621),k=t(74311),D=t(91981);let I=JSON.parse('{"accordion":"\\"use client\\";\\n\\nimport * as React from \\"react\\";\\nimport * as AccordionPrimitive from \\"@radix-ui/react-accordion\\";\\nimport { ChevronDown } from \\"lucide-react\\";\\n\\nimport { cn } from \\"@/lib/utils\\";\\n\\nconst Accordion = AccordionPrimitive.Root;\\n\\nconst AccordionItem = React.forwardRef<\\n  React.ElementRef<typeof AccordionPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\\n>(({ className, ...props }, ref) => (\\n  <AccordionPrimitive.Item\\n    ref={ref}\\n    className={cn(\\"border-b\\", className)}\\n    {...props}\\n  />\\n));\\nAccordionItem.displayName = \\"AccordionItem\\";\\n\\nconst AccordionTrigger = React.forwardRef<\\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\\n>(({ className, children, ...props }, ref) => (\\n  <AccordionPrimitive.Header className=\\"flex\\">\\n    <AccordionPrimitive.Trigger\\n      ref={ref}\\n      className={cn(\\n        \\"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\\",\\n        className\\n      )}\\n      {...props}\\n    >\\n      {children}\\n      <ChevronDown className=\\"h-4 w-4 shrink-0 transition-transform duration-200\\" />\\n    </AccordionPrimitive.Trigger>\\n  </AccordionPrimitive.Header>\\n));\\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\\n\\nconst AccordionContent = React.forwardRef<\\n  React.ElementRef<typeof AccordionPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\\n>(({ className, children, ...props }, ref) => (\\n  <AccordionPrimitive.Content\\n    ref={ref}\\n    className=\\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\\"\\n    {...props}\\n  >\\n    <div className={cn(\\"pb-4 pt-0\\", className)}>{children}</div>\\n  </AccordionPrimitive.Content>\\n));\\n\\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\\n\\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\\n","alert-dialog":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as AlertDialogPrimitive from \\"@radix-ui/react-alert-dialog\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { buttonVariants } from \\"@/components/ui/button\\"\\n\\nconst AlertDialog = AlertDialogPrimitive.Root\\n\\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\\n\\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\\n\\nconst AlertDialogOverlay = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPrimitive.Overlay\\n    className={cn(\\n      \\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\\",\\n      className\\n    )}\\n    {...props}\\n    ref={ref}\\n  />\\n))\\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\\n\\nconst AlertDialogContent = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPortal>\\n    <AlertDialogOverlay />\\n    <AlertDialogPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  </AlertDialogPortal>\\n))\\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\\n\\nconst AlertDialogHeader = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col space-y-2 text-center sm:text-left\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nAlertDialogHeader.displayName = \\"AlertDialogHeader\\"\\n\\nconst AlertDialogFooter = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nAlertDialogFooter.displayName = \\"AlertDialogFooter\\"\\n\\nconst AlertDialogTitle = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPrimitive.Title\\n    ref={ref}\\n    className={cn(\\"text-lg font-semibold\\", className)}\\n    {...props}\\n  />\\n))\\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\\n\\nconst AlertDialogDescription = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPrimitive.Description\\n    ref={ref}\\n    className={cn(\\"text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nAlertDialogDescription.displayName =\\n  AlertDialogPrimitive.Description.displayName\\n\\nconst AlertDialogAction = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPrimitive.Action\\n    ref={ref}\\n    className={cn(buttonVariants(), className)}\\n    {...props}\\n  />\\n))\\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\\n\\nconst AlertDialogCancel = React.forwardRef<\\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\\n>(({ className, ...props }, ref) => (\\n  <AlertDialogPrimitive.Cancel\\n    ref={ref}\\n    className={cn(\\n      buttonVariants({ variant: \\"outline\\" }),\\n      \\"mt-2 sm:mt-0\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\\n\\nexport {\\n  AlertDialog,\\n  AlertDialogPortal,\\n  AlertDialogOverlay,\\n  AlertDialogTrigger,\\n  AlertDialogContent,\\n  AlertDialogHeader,\\n  AlertDialogFooter,\\n  AlertDialogTitle,\\n  AlertDialogDescription,\\n  AlertDialogAction,\\n  AlertDialogCancel,\\n}\\n","alert":"import * as React from \\"react\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst alertVariants = cva(\\n  \\"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"bg-background text-foreground\\",\\n        destructive:\\n          \\"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n    },\\n  }\\n)\\n\\nconst Alert = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\\n>(({ className, variant, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    role=\\"alert\\"\\n    className={cn(alertVariants({ variant }), className)}\\n    {...props}\\n  />\\n))\\nAlert.displayName = \\"Alert\\"\\n\\nconst AlertTitle = React.forwardRef<\\n  HTMLParagraphElement,\\n  React.HTMLAttributes<HTMLHeadingElement>\\n>(({ className, ...props }, ref) => (\\n  <h5\\n    ref={ref}\\n    className={cn(\\"mb-1 font-medium leading-none tracking-tight\\", className)}\\n    {...props}\\n  />\\n))\\nAlertTitle.displayName = \\"AlertTitle\\"\\n\\nconst AlertDescription = React.forwardRef<\\n  HTMLParagraphElement,\\n  React.HTMLAttributes<HTMLParagraphElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\"text-sm [&_p]:leading-relaxed\\", className)}\\n    {...props}\\n  />\\n))\\nAlertDescription.displayName = \\"AlertDescription\\"\\n\\nexport { Alert, AlertTitle, AlertDescription }\\n","aspect-ratio":"\\"use client\\"\\n\\nimport * as AspectRatioPrimitive from \\"@radix-ui/react-aspect-ratio\\"\\n\\nconst AspectRatio = AspectRatioPrimitive.Root\\n\\nexport { AspectRatio }\\n","avatar":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as AvatarPrimitive from \\"@radix-ui/react-avatar\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Avatar = React.forwardRef<\\n  React.ElementRef<typeof AvatarPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\\n>(({ className, ...props }, ref) => (\\n  <AvatarPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nAvatar.displayName = AvatarPrimitive.Root.displayName\\n\\nconst AvatarImage = React.forwardRef<\\n  React.ElementRef<typeof AvatarPrimitive.Image>,\\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\\n>(({ className, ...props }, ref) => (\\n  <AvatarPrimitive.Image\\n    ref={ref}\\n    className={cn(\\"aspect-square h-full w-full\\", className)}\\n    {...props}\\n  />\\n))\\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\\n\\nconst AvatarFallback = React.forwardRef<\\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\\n>(({ className, ...props }, ref) => (\\n  <AvatarPrimitive.Fallback\\n    ref={ref}\\n    className={cn(\\n      \\"flex h-full w-full items-center justify-center rounded-full bg-muted\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\\n\\nexport { Avatar, AvatarImage, AvatarFallback }\\n","badge":"import * as React from \\"react\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst badgeVariants = cva(\\n  \\"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\\",\\n  {\\n    variants: {\\n      variant: {\\n        default:\\n          \\"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\\",\\n        secondary:\\n          \\"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\\",\\n        destructive:\\n          \\"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\\",\\n        outline: \\"text-foreground\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n    },\\n  }\\n)\\n\\nexport interface BadgeProps\\n  extends React.HTMLAttributes<HTMLDivElement>,\\n    VariantProps<typeof badgeVariants> {}\\n\\nfunction Badge({ className, variant, ...props }: BadgeProps) {\\n  return (\\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\\n  )\\n}\\n\\nexport { Badge, badgeVariants }\\n","breadcrumb":"import * as React from \\"react\\"\\nimport { Slot } from \\"@radix-ui/react-slot\\"\\nimport { ChevronRight, MoreHorizontal } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Breadcrumb = React.forwardRef<\\n  HTMLElement,\\n  React.ComponentPropsWithoutRef<\\"nav\\"> & {\\n    separator?: React.ReactNode\\n  }\\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\\"breadcrumb\\" {...props} />)\\nBreadcrumb.displayName = \\"Breadcrumb\\"\\n\\nconst BreadcrumbList = React.forwardRef<\\n  HTMLOListElement,\\n  React.ComponentPropsWithoutRef<\\"ol\\">\\n>(({ className, ...props }, ref) => (\\n  <ol\\n    ref={ref}\\n    className={cn(\\n      \\"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nBreadcrumbList.displayName = \\"BreadcrumbList\\"\\n\\nconst BreadcrumbItem = React.forwardRef<\\n  HTMLLIElement,\\n  React.ComponentPropsWithoutRef<\\"li\\">\\n>(({ className, ...props }, ref) => (\\n  <li\\n    ref={ref}\\n    className={cn(\\"inline-flex items-center gap-1.5\\", className)}\\n    {...props}\\n  />\\n))\\nBreadcrumbItem.displayName = \\"BreadcrumbItem\\"\\n\\nconst BreadcrumbLink = React.forwardRef<\\n  HTMLAnchorElement,\\n  React.ComponentPropsWithoutRef<\\"a\\"> & {\\n    asChild?: boolean\\n  }\\n>(({ asChild, className, ...props }, ref) => {\\n  const Comp = asChild ? Slot : \\"a\\"\\n\\n  return (\\n    <Comp\\n      ref={ref}\\n      className={cn(\\"transition-colors hover:text-foreground\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nBreadcrumbLink.displayName = \\"BreadcrumbLink\\"\\n\\nconst BreadcrumbPage = React.forwardRef<\\n  HTMLSpanElement,\\n  React.ComponentPropsWithoutRef<\\"span\\">\\n>(({ className, ...props }, ref) => (\\n  <span\\n    ref={ref}\\n    role=\\"link\\"\\n    aria-disabled=\\"true\\"\\n    aria-current=\\"page\\"\\n    className={cn(\\"font-normal text-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nBreadcrumbPage.displayName = \\"BreadcrumbPage\\"\\n\\nconst BreadcrumbSeparator = ({\\n  children,\\n  className,\\n  ...props\\n}: React.ComponentProps<\\"li\\">) => (\\n  <li\\n    role=\\"presentation\\"\\n    aria-hidden=\\"true\\"\\n    className={cn(\\"[&>svg]:w-3.5 [&>svg]:h-3.5\\", className)}\\n    {...props}\\n  >\\n    {children ?? <ChevronRight />}\\n  </li>\\n)\\nBreadcrumbSeparator.displayName = \\"BreadcrumbSeparator\\"\\n\\nconst BreadcrumbEllipsis = ({\\n  className,\\n  ...props\\n}: React.ComponentProps<\\"span\\">) => (\\n  <span\\n    role=\\"presentation\\"\\n    aria-hidden=\\"true\\"\\n    className={cn(\\"flex h-9 w-9 items-center justify-center\\", className)}\\n    {...props}\\n  >\\n    <MoreHorizontal className=\\"h-4 w-4\\" />\\n    <span className=\\"sr-only\\">More</span>\\n  </span>\\n)\\nBreadcrumbEllipsis.displayName = \\"BreadcrumbElipssis\\"\\n\\nexport {\\n  Breadcrumb,\\n  BreadcrumbList,\\n  BreadcrumbItem,\\n  BreadcrumbLink,\\n  BreadcrumbPage,\\n  BreadcrumbSeparator,\\n  BreadcrumbEllipsis,\\n}\\n","button":"import * as React from \\"react\\"\\nimport { Slot } from \\"@radix-ui/react-slot\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst buttonVariants = cva(\\n  \\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"bg-primary text-primary-foreground hover:bg-primary/90\\",\\n        destructive:\\n          \\"bg-destructive text-destructive-foreground hover:bg-destructive/90\\",\\n        outline:\\n          \\"border border-input bg-background hover:bg-accent hover:text-accent-foreground\\",\\n        secondary:\\n          \\"bg-secondary text-secondary-foreground hover:bg-secondary/80\\",\\n        ghost: \\"hover:bg-accent hover:text-accent-foreground\\",\\n        link: \\"text-primary underline-offset-4 hover:underline\\",\\n      },\\n      size: {\\n        default: \\"h-10 px-4 py-2\\",\\n        sm: \\"h-9 rounded-md px-3\\",\\n        lg: \\"h-11 rounded-md px-8\\",\\n        icon: \\"h-10 w-10\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n      size: \\"default\\",\\n    },\\n  }\\n)\\n\\nexport interface ButtonProps\\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\\n    VariantProps<typeof buttonVariants> {\\n  asChild?: boolean\\n}\\n\\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\\n    const Comp = asChild ? Slot : \\"button\\"\\n    return (\\n      <Comp\\n        className={cn(buttonVariants({ variant, size, className }))}\\n        ref={ref}\\n        {...props}\\n      />\\n    )\\n  }\\n)\\nButton.displayName = \\"Button\\"\\n\\nexport { Button, buttonVariants }\\n","calendar":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport { ChevronLeft, ChevronRight } from \\"lucide-react\\"\\nimport { DayPicker } from \\"react-day-picker\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { buttonVariants } from \\"@/components/ui/button\\"\\n\\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\\n\\nfunction Calendar({\\n  className,\\n  classNames,\\n  showOutsideDays = true,\\n  ...props\\n}: CalendarProps) {\\n  return (\\n    <DayPicker\\n      showOutsideDays={showOutsideDays}\\n      className={cn(\\"p-3\\", className)}\\n      classNames={{\\n        months: \\"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\\",\\n        month: \\"space-y-4\\",\\n        caption: \\"flex justify-center pt-1 relative items-center\\",\\n        caption_label: \\"text-sm font-medium\\",\\n        nav: \\"space-x-1 flex items-center\\",\\n        nav_button: cn(\\n          buttonVariants({ variant: \\"outline\\" }),\\n          \\"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\\"\\n        ),\\n        nav_button_previous: \\"absolute left-1\\",\\n        nav_button_next: \\"absolute right-1\\",\\n        table: \\"w-full border-collapse space-y-1\\",\\n        head_row: \\"flex\\",\\n        head_cell:\\n          \\"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\\",\\n        row: \\"flex w-full mt-2\\",\\n        cell: \\"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\\",\\n        day: cn(\\n          buttonVariants({ variant: \\"ghost\\" }),\\n          \\"h-9 w-9 p-0 font-normal aria-selected:opacity-100\\"\\n        ),\\n        day_range_end: \\"day-range-end\\",\\n        day_selected:\\n          \\"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\\",\\n        day_today: \\"bg-accent text-accent-foreground\\",\\n        day_outside:\\n          \\"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\\",\\n        day_disabled: \\"text-muted-foreground opacity-50\\",\\n        day_range_middle:\\n          \\"aria-selected:bg-accent aria-selected:text-accent-foreground\\",\\n        day_hidden: \\"invisible\\",\\n        ...classNames,\\n      }}\\n      components={{\\n        IconLeft: ({ ...props }) => <ChevronLeft className=\\"h-4 w-4\\" />,\\n        IconRight: ({ ...props }) => <ChevronRight className=\\"h-4 w-4\\" />,\\n      }}\\n      {...props}\\n    />\\n  )\\n}\\nCalendar.displayName = \\"Calendar\\"\\n\\nexport { Calendar }\\n","card":"import * as React from \\"react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Card = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\n      \\"rounded-lg border bg-card text-card-foreground shadow-sm\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nCard.displayName = \\"Card\\"\\n\\nconst CardHeader = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\"flex flex-col space-y-1.5 p-6\\", className)}\\n    {...props}\\n  />\\n))\\nCardHeader.displayName = \\"CardHeader\\"\\n\\nconst CardTitle = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\n      \\"text-2xl font-semibold leading-none tracking-tight\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nCardTitle.displayName = \\"CardTitle\\"\\n\\nconst CardDescription = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\"text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nCardDescription.displayName = \\"CardDescription\\"\\n\\nconst CardContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div ref={ref} className={cn(\\"p-6 pt-0\\", className)} {...props} />\\n))\\nCardContent.displayName = \\"CardContent\\"\\n\\nconst CardFooter = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    className={cn(\\"flex items-center p-6 pt-0\\", className)}\\n    {...props}\\n  />\\n))\\nCardFooter.displayName = \\"CardFooter\\"\\n\\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\\n","carousel":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport useEmblaCarousel, {\\n  type UseEmblaCarouselType,\\n} from \\"embla-carousel-react\\"\\nimport { ArrowLeft, ArrowRight } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { Button } from \\"@/components/ui/button\\"\\n\\ntype CarouselApi = UseEmblaCarouselType[1]\\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\\ntype CarouselOptions = UseCarouselParameters[0]\\ntype CarouselPlugin = UseCarouselParameters[1]\\n\\ntype CarouselProps = {\\n  opts?: CarouselOptions\\n  plugins?: CarouselPlugin\\n  orientation?: \\"horizontal\\" | \\"vertical\\"\\n  setApi?: (api: CarouselApi) => void\\n}\\n\\ntype CarouselContextProps = {\\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\\n  api: ReturnType<typeof useEmblaCarousel>[1]\\n  scrollPrev: () => void\\n  scrollNext: () => void\\n  canScrollPrev: boolean\\n  canScrollNext: boolean\\n} & CarouselProps\\n\\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\\n\\nfunction useCarousel() {\\n  const context = React.useContext(CarouselContext)\\n\\n  if (!context) {\\n    throw new Error(\\"useCarousel must be used within a <Carousel />\\")\\n  }\\n\\n  return context\\n}\\n\\nconst Carousel = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\\n>(\\n  (\\n    {\\n      orientation = \\"horizontal\\",\\n      opts,\\n      setApi,\\n      plugins,\\n      className,\\n      children,\\n      ...props\\n    },\\n    ref\\n  ) => {\\n    const [carouselRef, api] = useEmblaCarousel(\\n      {\\n        ...opts,\\n        axis: orientation === \\"horizontal\\" ? \\"x\\" : \\"y\\",\\n      },\\n      plugins\\n    )\\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\\n\\n    const onSelect = React.useCallback((api: CarouselApi) => {\\n      if (!api) {\\n        return\\n      }\\n\\n      setCanScrollPrev(api.canScrollPrev())\\n      setCanScrollNext(api.canScrollNext())\\n    }, [])\\n\\n    const scrollPrev = React.useCallback(() => {\\n      api?.scrollPrev()\\n    }, [api])\\n\\n    const scrollNext = React.useCallback(() => {\\n      api?.scrollNext()\\n    }, [api])\\n\\n    const handleKeyDown = React.useCallback(\\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\\n        if (event.key === \\"ArrowLeft\\") {\\n          event.preventDefault()\\n          scrollPrev()\\n        } else if (event.key === \\"ArrowRight\\") {\\n          event.preventDefault()\\n          scrollNext()\\n        }\\n      },\\n      [scrollPrev, scrollNext]\\n    )\\n\\n    React.useEffect(() => {\\n      if (!api || !setApi) {\\n        return\\n      }\\n\\n      setApi(api)\\n    }, [api, setApi])\\n\\n    React.useEffect(() => {\\n      if (!api) {\\n        return\\n      }\\n\\n      onSelect(api)\\n      api.on(\\"reInit\\", onSelect)\\n      api.on(\\"select\\", onSelect)\\n\\n      return () => {\\n        api?.off(\\"select\\", onSelect)\\n      }\\n    }, [api, onSelect])\\n\\n    return (\\n      <CarouselContext.Provider\\n        value={{\\n          carouselRef,\\n          api: api,\\n          opts,\\n          orientation:\\n            orientation || (opts?.axis === \\"y\\" ? \\"vertical\\" : \\"horizontal\\"),\\n          scrollPrev,\\n          scrollNext,\\n          canScrollPrev,\\n          canScrollNext,\\n        }}\\n      >\\n        <div\\n          ref={ref}\\n          onKeyDownCapture={handleKeyDown}\\n          className={cn(\\"relative\\", className)}\\n          role=\\"region\\"\\n          aria-roledescription=\\"carousel\\"\\n          {...props}\\n        >\\n          {children}\\n        </div>\\n      </CarouselContext.Provider>\\n    )\\n  }\\n)\\nCarousel.displayName = \\"Carousel\\"\\n\\nconst CarouselContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => {\\n  const { carouselRef, orientation } = useCarousel()\\n\\n  return (\\n    <div ref={carouselRef} className=\\"overflow-hidden\\">\\n      <div\\n        ref={ref}\\n        className={cn(\\n          \\"flex\\",\\n          orientation === \\"horizontal\\" ? \\"-ml-4\\" : \\"-mt-4 flex-col\\",\\n          className\\n        )}\\n        {...props}\\n      />\\n    </div>\\n  )\\n})\\nCarouselContent.displayName = \\"CarouselContent\\"\\n\\nconst CarouselItem = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => {\\n  const { orientation } = useCarousel()\\n\\n  return (\\n    <div\\n      ref={ref}\\n      role=\\"group\\"\\n      aria-roledescription=\\"slide\\"\\n      className={cn(\\n        \\"min-w-0 shrink-0 grow-0 basis-full\\",\\n        orientation === \\"horizontal\\" ? \\"pl-4\\" : \\"pt-4\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nCarouselItem.displayName = \\"CarouselItem\\"\\n\\nconst CarouselPrevious = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<typeof Button>\\n>(({ className, variant = \\"outline\\", size = \\"icon\\", ...props }, ref) => {\\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\\n\\n  return (\\n    <Button\\n      ref={ref}\\n      variant={variant}\\n      size={size}\\n      className={cn(\\n        \\"absolute  h-8 w-8 rounded-full\\",\\n        orientation === \\"horizontal\\"\\n          ? \\"-left-12 top-1/2 -translate-y-1/2\\"\\n          : \\"-top-12 left-1/2 -translate-x-1/2 rotate-90\\",\\n        className\\n      )}\\n      disabled={!canScrollPrev}\\n      onClick={scrollPrev}\\n      {...props}\\n    >\\n      <ArrowLeft className=\\"h-4 w-4\\" />\\n      <span className=\\"sr-only\\">Previous slide</span>\\n    </Button>\\n  )\\n})\\nCarouselPrevious.displayName = \\"CarouselPrevious\\"\\n\\nconst CarouselNext = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<typeof Button>\\n>(({ className, variant = \\"outline\\", size = \\"icon\\", ...props }, ref) => {\\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\\n\\n  return (\\n    <Button\\n      ref={ref}\\n      variant={variant}\\n      size={size}\\n      className={cn(\\n        \\"absolute h-8 w-8 rounded-full\\",\\n        orientation === \\"horizontal\\"\\n          ? \\"-right-12 top-1/2 -translate-y-1/2\\"\\n          : \\"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\\",\\n        className\\n      )}\\n      disabled={!canScrollNext}\\n      onClick={scrollNext}\\n      {...props}\\n    >\\n      <ArrowRight className=\\"h-4 w-4\\" />\\n      <span className=\\"sr-only\\">Next slide</span>\\n    </Button>\\n  )\\n})\\nCarouselNext.displayName = \\"CarouselNext\\"\\n\\nexport {\\n  type CarouselApi,\\n  Carousel,\\n  CarouselContent,\\n  CarouselItem,\\n  CarouselPrevious,\\n  CarouselNext,\\n}\\n","chart":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as RechartsPrimitive from \\"recharts\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\n// Format: { THEME_NAME: CSS_SELECTOR }\\nconst THEMES = { light: \\"\\", dark: \\".dark\\" } as const\\n\\nexport type ChartConfig = {\\n  [k in string]: {\\n    label?: React.ReactNode\\n    icon?: React.ComponentType\\n  } & (\\n    | { color?: string; theme?: never }\\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\\n  )\\n}\\n\\ntype ChartContextProps = {\\n  config: ChartConfig\\n}\\n\\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\\n\\nfunction useChart() {\\n  const context = React.useContext(ChartContext)\\n\\n  if (!context) {\\n    throw new Error(\\"useChart must be used within a <ChartContainer />\\")\\n  }\\n\\n  return context\\n}\\n\\nconst ChartContainer = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> & {\\n    config: ChartConfig\\n    children: React.ComponentProps<\\n      typeof RechartsPrimitive.ResponsiveContainer\\n    >[\\"children\\"]\\n  }\\n>(({ id, className, children, config, ...props }, ref) => {\\n  const uniqueId = React.useId()\\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \\"\\")}`\\n\\n  return (\\n    <ChartContext.Provider value={{ config }}>\\n      <div\\n        data-chart={chartId}\\n        ref={ref}\\n        className={cn(\\n          \\"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke=\'#ccc\']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke=\'#fff\']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke=\'#ccc\']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke=\'#ccc\']]:stroke-border [&_.recharts-sector[stroke=\'#fff\']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\\",\\n          className\\n        )}\\n        {...props}\\n      >\\n        <ChartStyle id={chartId} config={config} />\\n        <RechartsPrimitive.ResponsiveContainer>\\n          {children}\\n        </RechartsPrimitive.ResponsiveContainer>\\n      </div>\\n    </ChartContext.Provider>\\n  )\\n})\\nChartContainer.displayName = \\"Chart\\"\\n\\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\\n  const colorConfig = Object.entries(config).filter(\\n    ([_, config]) => config.theme || config.color\\n  )\\n\\n  if (!colorConfig.length) {\\n    return null\\n  }\\n\\n  return (\\n    <style\\n      dangerouslySetInnerHTML={{\\n        __html: Object.entries(THEMES)\\n          .map(\\n            ([theme, prefix]) => `\\n${prefix} [data-chart=${id}] {\\n${colorConfig\\n  .map(([key, itemConfig]) => {\\n    const color =\\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\\n      itemConfig.color\\n    return color ? `  --color-${key}: ${color};` : null\\n  })\\n  .join(\\"\\\\n\\")}\\n}\\n`\\n          )\\n          .join(\\"\\\\n\\"),\\n      }}\\n    />\\n  )\\n}\\n\\nconst ChartTooltip = RechartsPrimitive.Tooltip\\n\\nconst ChartTooltipContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\\n    React.ComponentProps<\\"div\\"> & {\\n      hideLabel?: boolean\\n      hideIndicator?: boolean\\n      indicator?: \\"line\\" | \\"dot\\" | \\"dashed\\"\\n      nameKey?: string\\n      labelKey?: string\\n    }\\n>(\\n  (\\n    {\\n      active,\\n      payload,\\n      className,\\n      indicator = \\"dot\\",\\n      hideLabel = false,\\n      hideIndicator = false,\\n      label,\\n      labelFormatter,\\n      labelClassName,\\n      formatter,\\n      color,\\n      nameKey,\\n      labelKey,\\n    },\\n    ref\\n  ) => {\\n    const { config } = useChart()\\n\\n    const tooltipLabel = React.useMemo(() => {\\n      if (hideLabel || !payload?.length) {\\n        return null\\n      }\\n\\n      const [item] = payload\\n      const key = `${labelKey || item.dataKey || item.name || \\"value\\"}`\\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\\n      const value =\\n        !labelKey && typeof label === \\"string\\"\\n          ? config[label as keyof typeof config]?.label || label\\n          : itemConfig?.label\\n\\n      if (labelFormatter) {\\n        return (\\n          <div className={cn(\\"font-medium\\", labelClassName)}>\\n            {labelFormatter(value, payload)}\\n          </div>\\n        )\\n      }\\n\\n      if (!value) {\\n        return null\\n      }\\n\\n      return <div className={cn(\\"font-medium\\", labelClassName)}>{value}</div>\\n    }, [\\n      label,\\n      labelFormatter,\\n      payload,\\n      hideLabel,\\n      labelClassName,\\n      config,\\n      labelKey,\\n    ])\\n\\n    if (!active || !payload?.length) {\\n      return null\\n    }\\n\\n    const nestLabel = payload.length === 1 && indicator !== \\"dot\\"\\n\\n    return (\\n      <div\\n        ref={ref}\\n        className={cn(\\n          \\"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\\",\\n          className\\n        )}\\n      >\\n        {!nestLabel ? tooltipLabel : null}\\n        <div className=\\"grid gap-1.5\\">\\n          {payload.map((item, index) => {\\n            const key = `${nameKey || item.name || item.dataKey || \\"value\\"}`\\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\\n            const indicatorColor = color || item.payload.fill || item.color\\n\\n            return (\\n              <div\\n                key={item.dataKey}\\n                className={cn(\\n                  \\"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\\",\\n                  indicator === \\"dot\\" && \\"items-center\\"\\n                )}\\n              >\\n                {formatter && item?.value !== undefined && item.name ? (\\n                  formatter(item.value, item.name, item, index, item.payload)\\n                ) : (\\n                  <>\\n                    {itemConfig?.icon ? (\\n                      <itemConfig.icon />\\n                    ) : (\\n                      !hideIndicator && (\\n                        <div\\n                          className={cn(\\n                            \\"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\\",\\n                            {\\n                              \\"h-2.5 w-2.5\\": indicator === \\"dot\\",\\n                              \\"w-1\\": indicator === \\"line\\",\\n                              \\"w-0 border-[1.5px] border-dashed bg-transparent\\":\\n                                indicator === \\"dashed\\",\\n                              \\"my-0.5\\": nestLabel && indicator === \\"dashed\\",\\n                            }\\n                          )}\\n                          style={\\n                            {\\n                              \\"--color-bg\\": indicatorColor,\\n                              \\"--color-border\\": indicatorColor,\\n                            } as React.CSSProperties\\n                          }\\n                        />\\n                      )\\n                    )}\\n                    <div\\n                      className={cn(\\n                        \\"flex flex-1 justify-between leading-none\\",\\n                        nestLabel ? \\"items-end\\" : \\"items-center\\"\\n                      )}\\n                    >\\n                      <div className=\\"grid gap-1.5\\">\\n                        {nestLabel ? tooltipLabel : null}\\n                        <span className=\\"text-muted-foreground\\">\\n                          {itemConfig?.label || item.name}\\n                        </span>\\n                      </div>\\n                      {item.value && (\\n                        <span className=\\"font-mono font-medium tabular-nums text-foreground\\">\\n                          {item.value.toLocaleString()}\\n                        </span>\\n                      )}\\n                    </div>\\n                  </>\\n                )}\\n              </div>\\n            )\\n          })}\\n        </div>\\n      </div>\\n    )\\n  }\\n)\\nChartTooltipContent.displayName = \\"ChartTooltip\\"\\n\\nconst ChartLegend = RechartsPrimitive.Legend\\n\\nconst ChartLegendContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> &\\n    Pick<RechartsPrimitive.LegendProps, \\"payload\\" | \\"verticalAlign\\"> & {\\n      hideIcon?: boolean\\n      nameKey?: string\\n    }\\n>(\\n  (\\n    { className, hideIcon = false, payload, verticalAlign = \\"bottom\\", nameKey },\\n    ref\\n  ) => {\\n    const { config } = useChart()\\n\\n    if (!payload?.length) {\\n      return null\\n    }\\n\\n    return (\\n      <div\\n        ref={ref}\\n        className={cn(\\n          \\"flex items-center justify-center gap-4\\",\\n          verticalAlign === \\"top\\" ? \\"pb-3\\" : \\"pt-3\\",\\n          className\\n        )}\\n      >\\n        {payload.map((item) => {\\n          const key = `${nameKey || item.dataKey || \\"value\\"}`\\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\\n\\n          return (\\n            <div\\n              key={item.value}\\n              className={cn(\\n                \\"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\\"\\n              )}\\n            >\\n              {itemConfig?.icon && !hideIcon ? (\\n                <itemConfig.icon />\\n              ) : (\\n                <div\\n                  className=\\"h-2 w-2 shrink-0 rounded-[2px]\\"\\n                  style={{\\n                    backgroundColor: item.color,\\n                  }}\\n                />\\n              )}\\n              {itemConfig?.label}\\n            </div>\\n          )\\n        })}\\n      </div>\\n    )\\n  }\\n)\\nChartLegendContent.displayName = \\"ChartLegend\\"\\n\\n// Helper to extract item config from a payload.\\nfunction getPayloadConfigFromPayload(\\n  config: ChartConfig,\\n  payload: unknown,\\n  key: string\\n) {\\n  if (typeof payload !== \\"object\\" || payload === null) {\\n    return undefined\\n  }\\n\\n  const payloadPayload =\\n    \\"payload\\" in payload &&\\n    typeof payload.payload === \\"object\\" &&\\n    payload.payload !== null\\n      ? payload.payload\\n      : undefined\\n\\n  let configLabelKey: string = key\\n\\n  if (\\n    key in payload &&\\n    typeof payload[key as keyof typeof payload] === \\"string\\"\\n  ) {\\n    configLabelKey = payload[key as keyof typeof payload] as string\\n  } else if (\\n    payloadPayload &&\\n    key in payloadPayload &&\\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \\"string\\"\\n  ) {\\n    configLabelKey = payloadPayload[\\n      key as keyof typeof payloadPayload\\n    ] as string\\n  }\\n\\n  return configLabelKey in config\\n    ? config[configLabelKey]\\n    : config[key as keyof typeof config]\\n}\\n\\nexport {\\n  ChartContainer,\\n  ChartTooltip,\\n  ChartTooltipContent,\\n  ChartLegend,\\n  ChartLegendContent,\\n  ChartStyle,\\n}\\n","checkbox":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as CheckboxPrimitive from \\"@radix-ui/react-checkbox\\"\\nimport { Check } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Checkbox = React.forwardRef<\\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\\n>(({ className, ...props }, ref) => (\\n  <CheckboxPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <CheckboxPrimitive.Indicator\\n      className={cn(\\"flex items-center justify-center text-current\\")}\\n    >\\n      <Check className=\\"h-4 w-4\\" />\\n    </CheckboxPrimitive.Indicator>\\n  </CheckboxPrimitive.Root>\\n))\\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\\n\\nexport { Checkbox }\\n","collapsible":"\\"use client\\"\\n\\nimport * as CollapsiblePrimitive from \\"@radix-ui/react-collapsible\\"\\n\\nconst Collapsible = CollapsiblePrimitive.Root\\n\\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\\n\\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\\n\\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\\n","command":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport { type DialogProps } from \\"@radix-ui/react-dialog\\"\\nimport { Command as CommandPrimitive } from \\"cmdk\\"\\nimport { Search } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { Dialog, DialogContent } from \\"@/components/ui/dialog\\"\\n\\nconst Command = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\\n>(({ className, ...props }, ref) => (\\n  <CommandPrimitive\\n    ref={ref}\\n    className={cn(\\n      \\"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nCommand.displayName = CommandPrimitive.displayName\\n\\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\\n  return (\\n    <Dialog {...props}>\\n      <DialogContent className=\\"overflow-hidden p-0 shadow-lg\\">\\n        <Command className=\\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\\">\\n          {children}\\n        </Command>\\n      </DialogContent>\\n    </Dialog>\\n  )\\n}\\n\\nconst CommandInput = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.Input>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\\n>(({ className, ...props }, ref) => (\\n  <div className=\\"flex items-center border-b px-3\\" cmdk-input-wrapper=\\"\\">\\n    <Search className=\\"mr-2 h-4 w-4 shrink-0 opacity-50\\" />\\n    <CommandPrimitive.Input\\n      ref={ref}\\n      className={cn(\\n        \\"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  </div>\\n))\\n\\nCommandInput.displayName = CommandPrimitive.Input.displayName\\n\\nconst CommandList = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.List>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\\n>(({ className, ...props }, ref) => (\\n  <CommandPrimitive.List\\n    ref={ref}\\n    className={cn(\\"max-h-[300px] overflow-y-auto overflow-x-hidden\\", className)}\\n    {...props}\\n  />\\n))\\n\\nCommandList.displayName = CommandPrimitive.List.displayName\\n\\nconst CommandEmpty = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.Empty>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\\n>((props, ref) => (\\n  <CommandPrimitive.Empty\\n    ref={ref}\\n    className=\\"py-6 text-center text-sm\\"\\n    {...props}\\n  />\\n))\\n\\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\\n\\nconst CommandGroup = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.Group>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\\n>(({ className, ...props }, ref) => (\\n  <CommandPrimitive.Group\\n    ref={ref}\\n    className={cn(\\n      \\"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\n\\nCommandGroup.displayName = CommandPrimitive.Group.displayName\\n\\nconst CommandSeparator = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.Separator>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\\n>(({ className, ...props }, ref) => (\\n  <CommandPrimitive.Separator\\n    ref={ref}\\n    className={cn(\\"-mx-1 h-px bg-border\\", className)}\\n    {...props}\\n  />\\n))\\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\\n\\nconst CommandItem = React.forwardRef<\\n  React.ElementRef<typeof CommandPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\\n>(({ className, ...props }, ref) => (\\n  <CommandPrimitive.Item\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=\'true\']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\n\\nCommandItem.displayName = CommandPrimitive.Item.displayName\\n\\nconst CommandShortcut = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLSpanElement>) => {\\n  return (\\n    <span\\n      className={cn(\\n        \\"ml-auto text-xs tracking-widest text-muted-foreground\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n}\\nCommandShortcut.displayName = \\"CommandShortcut\\"\\n\\nexport {\\n  Command,\\n  CommandDialog,\\n  CommandInput,\\n  CommandList,\\n  CommandEmpty,\\n  CommandGroup,\\n  CommandItem,\\n  CommandShortcut,\\n  CommandSeparator,\\n}\\n","context-menu":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as ContextMenuPrimitive from \\"@radix-ui/react-context-menu\\"\\nimport { Check, ChevronRight, Circle } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst ContextMenu = ContextMenuPrimitive.Root\\n\\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\\n\\nconst ContextMenuGroup = ContextMenuPrimitive.Group\\n\\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\\n\\nconst ContextMenuSub = ContextMenuPrimitive.Sub\\n\\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\\n\\nconst ContextMenuSubTrigger = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, children, ...props }, ref) => (\\n  <ContextMenuPrimitive.SubTrigger\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {children}\\n    <ChevronRight className=\\"ml-auto h-4 w-4\\" />\\n  </ContextMenuPrimitive.SubTrigger>\\n))\\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\\n\\nconst ContextMenuSubContent = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\\n>(({ className, ...props }, ref) => (\\n  <ContextMenuPrimitive.SubContent\\n    ref={ref}\\n    className={cn(\\n      \\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\\n\\nconst ContextMenuContent = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\\n>(({ className, ...props }, ref) => (\\n  <ContextMenuPrimitive.Portal>\\n    <ContextMenuPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  </ContextMenuPrimitive.Portal>\\n))\\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\\n\\nconst ContextMenuItem = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <ContextMenuPrimitive.Item\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\\n\\nconst ContextMenuCheckboxItem = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\\n>(({ className, children, checked, ...props }, ref) => (\\n  <ContextMenuPrimitive.CheckboxItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    checked={checked}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <ContextMenuPrimitive.ItemIndicator>\\n        <Check className=\\"h-4 w-4\\" />\\n      </ContextMenuPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </ContextMenuPrimitive.CheckboxItem>\\n))\\nContextMenuCheckboxItem.displayName =\\n  ContextMenuPrimitive.CheckboxItem.displayName\\n\\nconst ContextMenuRadioItem = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\\n>(({ className, children, ...props }, ref) => (\\n  <ContextMenuPrimitive.RadioItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <ContextMenuPrimitive.ItemIndicator>\\n        <Circle className=\\"h-2 w-2 fill-current\\" />\\n      </ContextMenuPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </ContextMenuPrimitive.RadioItem>\\n))\\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\\n\\nconst ContextMenuLabel = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <ContextMenuPrimitive.Label\\n    ref={ref}\\n    className={cn(\\n      \\"px-2 py-1.5 text-sm font-semibold text-foreground\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\\n\\nconst ContextMenuSeparator = React.forwardRef<\\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\\n>(({ className, ...props }, ref) => (\\n  <ContextMenuPrimitive.Separator\\n    ref={ref}\\n    className={cn(\\"-mx-1 my-1 h-px bg-border\\", className)}\\n    {...props}\\n  />\\n))\\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\\n\\nconst ContextMenuShortcut = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLSpanElement>) => {\\n  return (\\n    <span\\n      className={cn(\\n        \\"ml-auto text-xs tracking-widest text-muted-foreground\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n}\\nContextMenuShortcut.displayName = \\"ContextMenuShortcut\\"\\n\\nexport {\\n  ContextMenu,\\n  ContextMenuTrigger,\\n  ContextMenuContent,\\n  ContextMenuItem,\\n  ContextMenuCheckboxItem,\\n  ContextMenuRadioItem,\\n  ContextMenuLabel,\\n  ContextMenuSeparator,\\n  ContextMenuShortcut,\\n  ContextMenuGroup,\\n  ContextMenuPortal,\\n  ContextMenuSub,\\n  ContextMenuSubContent,\\n  ContextMenuSubTrigger,\\n  ContextMenuRadioGroup,\\n}\\n","dialog":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as DialogPrimitive from \\"@radix-ui/react-dialog\\"\\nimport { X } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Dialog = DialogPrimitive.Root\\n\\nconst DialogTrigger = DialogPrimitive.Trigger\\n\\nconst DialogPortal = DialogPrimitive.Portal\\n\\nconst DialogClose = DialogPrimitive.Close\\n\\nconst DialogOverlay = React.forwardRef<\\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\\n>(({ className, ...props }, ref) => (\\n  <DialogPrimitive.Overlay\\n    ref={ref}\\n    className={cn(\\n      \\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\\n\\nconst DialogContent = React.forwardRef<\\n  React.ElementRef<typeof DialogPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\\n>(({ className, children, ...props }, ref) => (\\n  <DialogPortal>\\n    <DialogOverlay />\\n    <DialogPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \\"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\\",\\n        className\\n      )}\\n      {...props}\\n    >\\n      {children}\\n      <DialogPrimitive.Close className=\\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\\">\\n        <X className=\\"h-4 w-4\\" />\\n        <span className=\\"sr-only\\">Close</span>\\n      </DialogPrimitive.Close>\\n    </DialogPrimitive.Content>\\n  </DialogPortal>\\n))\\nDialogContent.displayName = DialogPrimitive.Content.displayName\\n\\nconst DialogHeader = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col space-y-1.5 text-center sm:text-left\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nDialogHeader.displayName = \\"DialogHeader\\"\\n\\nconst DialogFooter = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nDialogFooter.displayName = \\"DialogFooter\\"\\n\\nconst DialogTitle = React.forwardRef<\\n  React.ElementRef<typeof DialogPrimitive.Title>,\\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\\n>(({ className, ...props }, ref) => (\\n  <DialogPrimitive.Title\\n    ref={ref}\\n    className={cn(\\n      \\"text-lg font-semibold leading-none tracking-tight\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDialogTitle.displayName = DialogPrimitive.Title.displayName\\n\\nconst DialogDescription = React.forwardRef<\\n  React.ElementRef<typeof DialogPrimitive.Description>,\\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\\n>(({ className, ...props }, ref) => (\\n  <DialogPrimitive.Description\\n    ref={ref}\\n    className={cn(\\"text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nDialogDescription.displayName = DialogPrimitive.Description.displayName\\n\\nexport {\\n  Dialog,\\n  DialogPortal,\\n  DialogOverlay,\\n  DialogClose,\\n  DialogTrigger,\\n  DialogContent,\\n  DialogHeader,\\n  DialogFooter,\\n  DialogTitle,\\n  DialogDescription,\\n}\\n","drawer":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport { Drawer as DrawerPrimitive } from \\"vaul\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Drawer = ({\\n  shouldScaleBackground = true,\\n  ...props\\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\\n  <DrawerPrimitive.Root\\n    shouldScaleBackground={shouldScaleBackground}\\n    {...props}\\n  />\\n)\\nDrawer.displayName = \\"Drawer\\"\\n\\nconst DrawerTrigger = DrawerPrimitive.Trigger\\n\\nconst DrawerPortal = DrawerPrimitive.Portal\\n\\nconst DrawerClose = DrawerPrimitive.Close\\n\\nconst DrawerOverlay = React.forwardRef<\\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\\n>(({ className, ...props }, ref) => (\\n  <DrawerPrimitive.Overlay\\n    ref={ref}\\n    className={cn(\\"fixed inset-0 z-50 bg-black/80\\", className)}\\n    {...props}\\n  />\\n))\\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\\n\\nconst DrawerContent = React.forwardRef<\\n  React.ElementRef<typeof DrawerPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\\n>(({ className, children, ...props }, ref) => (\\n  <DrawerPortal>\\n    <DrawerOverlay />\\n    <DrawerPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \\"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\\",\\n        className\\n      )}\\n      {...props}\\n    >\\n      <div className=\\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\\" />\\n      {children}\\n    </DrawerPrimitive.Content>\\n  </DrawerPortal>\\n))\\nDrawerContent.displayName = \\"DrawerContent\\"\\n\\nconst DrawerHeader = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\"grid gap-1.5 p-4 text-center sm:text-left\\", className)}\\n    {...props}\\n  />\\n)\\nDrawerHeader.displayName = \\"DrawerHeader\\"\\n\\nconst DrawerFooter = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\"mt-auto flex flex-col gap-2 p-4\\", className)}\\n    {...props}\\n  />\\n)\\nDrawerFooter.displayName = \\"DrawerFooter\\"\\n\\nconst DrawerTitle = React.forwardRef<\\n  React.ElementRef<typeof DrawerPrimitive.Title>,\\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\\n>(({ className, ...props }, ref) => (\\n  <DrawerPrimitive.Title\\n    ref={ref}\\n    className={cn(\\n      \\"text-lg font-semibold leading-none tracking-tight\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\\n\\nconst DrawerDescription = React.forwardRef<\\n  React.ElementRef<typeof DrawerPrimitive.Description>,\\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\\n>(({ className, ...props }, ref) => (\\n  <DrawerPrimitive.Description\\n    ref={ref}\\n    className={cn(\\"text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\\n\\nexport {\\n  Drawer,\\n  DrawerPortal,\\n  DrawerOverlay,\\n  DrawerTrigger,\\n  DrawerClose,\\n  DrawerContent,\\n  DrawerHeader,\\n  DrawerFooter,\\n  DrawerTitle,\\n  DrawerDescription,\\n}\\n","dropdown-menu":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as DropdownMenuPrimitive from \\"@radix-ui/react-dropdown-menu\\"\\nimport { Check, ChevronRight, Circle } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst DropdownMenu = DropdownMenuPrimitive.Root\\n\\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\\n\\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\\n\\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\\n\\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\\n\\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\\n\\nconst DropdownMenuSubTrigger = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, children, ...props }, ref) => (\\n  <DropdownMenuPrimitive.SubTrigger\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {children}\\n    <ChevronRight className=\\"ml-auto\\" />\\n  </DropdownMenuPrimitive.SubTrigger>\\n))\\nDropdownMenuSubTrigger.displayName =\\n  DropdownMenuPrimitive.SubTrigger.displayName\\n\\nconst DropdownMenuSubContent = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\\n>(({ className, ...props }, ref) => (\\n  <DropdownMenuPrimitive.SubContent\\n    ref={ref}\\n    className={cn(\\n      \\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDropdownMenuSubContent.displayName =\\n  DropdownMenuPrimitive.SubContent.displayName\\n\\nconst DropdownMenuContent = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\\n>(({ className, sideOffset = 4, ...props }, ref) => (\\n  <DropdownMenuPrimitive.Portal>\\n    <DropdownMenuPrimitive.Content\\n      ref={ref}\\n      sideOffset={sideOffset}\\n      className={cn(\\n        \\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  </DropdownMenuPrimitive.Portal>\\n))\\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\\n\\nconst DropdownMenuItem = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <DropdownMenuPrimitive.Item\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\\n\\nconst DropdownMenuCheckboxItem = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\\n>(({ className, children, checked, ...props }, ref) => (\\n  <DropdownMenuPrimitive.CheckboxItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    checked={checked}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <DropdownMenuPrimitive.ItemIndicator>\\n        <Check className=\\"h-4 w-4\\" />\\n      </DropdownMenuPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </DropdownMenuPrimitive.CheckboxItem>\\n))\\nDropdownMenuCheckboxItem.displayName =\\n  DropdownMenuPrimitive.CheckboxItem.displayName\\n\\nconst DropdownMenuRadioItem = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\\n>(({ className, children, ...props }, ref) => (\\n  <DropdownMenuPrimitive.RadioItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <DropdownMenuPrimitive.ItemIndicator>\\n        <Circle className=\\"h-2 w-2 fill-current\\" />\\n      </DropdownMenuPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </DropdownMenuPrimitive.RadioItem>\\n))\\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\\n\\nconst DropdownMenuLabel = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <DropdownMenuPrimitive.Label\\n    ref={ref}\\n    className={cn(\\n      \\"px-2 py-1.5 text-sm font-semibold\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\\n\\nconst DropdownMenuSeparator = React.forwardRef<\\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\\n>(({ className, ...props }, ref) => (\\n  <DropdownMenuPrimitive.Separator\\n    ref={ref}\\n    className={cn(\\"-mx-1 my-1 h-px bg-muted\\", className)}\\n    {...props}\\n  />\\n))\\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\\n\\nconst DropdownMenuShortcut = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLSpanElement>) => {\\n  return (\\n    <span\\n      className={cn(\\"ml-auto text-xs tracking-widest opacity-60\\", className)}\\n      {...props}\\n    />\\n  )\\n}\\nDropdownMenuShortcut.displayName = \\"DropdownMenuShortcut\\"\\n\\nexport {\\n  DropdownMenu,\\n  DropdownMenuTrigger,\\n  DropdownMenuContent,\\n  DropdownMenuItem,\\n  DropdownMenuCheckboxItem,\\n  DropdownMenuRadioItem,\\n  DropdownMenuLabel,\\n  DropdownMenuSeparator,\\n  DropdownMenuShortcut,\\n  DropdownMenuGroup,\\n  DropdownMenuPortal,\\n  DropdownMenuSub,\\n  DropdownMenuSubContent,\\n  DropdownMenuSubTrigger,\\n  DropdownMenuRadioGroup,\\n}\\n","form":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as LabelPrimitive from \\"@radix-ui/react-label\\"\\nimport { Slot } from \\"@radix-ui/react-slot\\"\\nimport {\\n  Controller,\\n  ControllerProps,\\n  FieldPath,\\n  FieldValues,\\n  FormProvider,\\n  useFormContext,\\n} from \\"react-hook-form\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { Label } from \\"@/components/ui/label\\"\\n\\nconst Form = FormProvider\\n\\ntype FormFieldContextValue<\\n  TFieldValues extends FieldValues = FieldValues,\\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\\n> = {\\n  name: TName\\n}\\n\\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\\n  {} as FormFieldContextValue\\n)\\n\\nconst FormField = <\\n  TFieldValues extends FieldValues = FieldValues,\\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\\n>({\\n  ...props\\n}: ControllerProps<TFieldValues, TName>) => {\\n  return (\\n    <FormFieldContext.Provider value={{ name: props.name }}>\\n      <Controller {...props} />\\n    </FormFieldContext.Provider>\\n  )\\n}\\n\\nconst useFormField = () => {\\n  const fieldContext = React.useContext(FormFieldContext)\\n  const itemContext = React.useContext(FormItemContext)\\n  const { getFieldState, formState } = useFormContext()\\n\\n  const fieldState = getFieldState(fieldContext.name, formState)\\n\\n  if (!fieldContext) {\\n    throw new Error(\\"useFormField should be used within <FormField>\\")\\n  }\\n\\n  const { id } = itemContext\\n\\n  return {\\n    id,\\n    name: fieldContext.name,\\n    formItemId: `${id}-form-item`,\\n    formDescriptionId: `${id}-form-item-description`,\\n    formMessageId: `${id}-form-item-message`,\\n    ...fieldState,\\n  }\\n}\\n\\ntype FormItemContextValue = {\\n  id: string\\n}\\n\\nconst FormItemContext = React.createContext<FormItemContextValue>(\\n  {} as FormItemContextValue\\n)\\n\\nconst FormItem = React.forwardRef<\\n  HTMLDivElement,\\n  React.HTMLAttributes<HTMLDivElement>\\n>(({ className, ...props }, ref) => {\\n  const id = React.useId()\\n\\n  return (\\n    <FormItemContext.Provider value={{ id }}>\\n      <div ref={ref} className={cn(\\"space-y-2\\", className)} {...props} />\\n    </FormItemContext.Provider>\\n  )\\n})\\nFormItem.displayName = \\"FormItem\\"\\n\\nconst FormLabel = React.forwardRef<\\n  React.ElementRef<typeof LabelPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\\n>(({ className, ...props }, ref) => {\\n  const { error, formItemId } = useFormField()\\n\\n  return (\\n    <Label\\n      ref={ref}\\n      className={cn(error && \\"text-destructive\\", className)}\\n      htmlFor={formItemId}\\n      {...props}\\n    />\\n  )\\n})\\nFormLabel.displayName = \\"FormLabel\\"\\n\\nconst FormControl = React.forwardRef<\\n  React.ElementRef<typeof Slot>,\\n  React.ComponentPropsWithoutRef<typeof Slot>\\n>(({ ...props }, ref) => {\\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\\n\\n  return (\\n    <Slot\\n      ref={ref}\\n      id={formItemId}\\n      aria-describedby={\\n        !error\\n          ? `${formDescriptionId}`\\n          : `${formDescriptionId} ${formMessageId}`\\n      }\\n      aria-invalid={!!error}\\n      {...props}\\n    />\\n  )\\n})\\nFormControl.displayName = \\"FormControl\\"\\n\\nconst FormDescription = React.forwardRef<\\n  HTMLParagraphElement,\\n  React.HTMLAttributes<HTMLParagraphElement>\\n>(({ className, ...props }, ref) => {\\n  const { formDescriptionId } = useFormField()\\n\\n  return (\\n    <p\\n      ref={ref}\\n      id={formDescriptionId}\\n      className={cn(\\"text-sm text-muted-foreground\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nFormDescription.displayName = \\"FormDescription\\"\\n\\nconst FormMessage = React.forwardRef<\\n  HTMLParagraphElement,\\n  React.HTMLAttributes<HTMLParagraphElement>\\n>(({ className, children, ...props }, ref) => {\\n  const { error, formMessageId } = useFormField()\\n  const body = error ? String(error?.message) : children\\n\\n  if (!body) {\\n    return null\\n  }\\n\\n  return (\\n    <p\\n      ref={ref}\\n      id={formMessageId}\\n      className={cn(\\"text-sm font-medium text-destructive\\", className)}\\n      {...props}\\n    >\\n      {body}\\n    </p>\\n  )\\n})\\nFormMessage.displayName = \\"FormMessage\\"\\n\\nexport {\\n  useFormField,\\n  Form,\\n  FormItem,\\n  FormLabel,\\n  FormControl,\\n  FormDescription,\\n  FormMessage,\\n  FormField,\\n}\\n","hover-card":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as HoverCardPrimitive from \\"@radix-ui/react-hover-card\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst HoverCard = HoverCardPrimitive.Root\\n\\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\\n\\nconst HoverCardContent = React.forwardRef<\\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\\n>(({ className, align = \\"center\\", sideOffset = 4, ...props }, ref) => (\\n  <HoverCardPrimitive.Content\\n    ref={ref}\\n    align={align}\\n    sideOffset={sideOffset}\\n    className={cn(\\n      \\"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\\n\\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\\n","input-otp":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport { OTPInput, OTPInputContext } from \\"input-otp\\"\\nimport { Dot } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst InputOTP = React.forwardRef<\\n  React.ElementRef<typeof OTPInput>,\\n  React.ComponentPropsWithoutRef<typeof OTPInput>\\n>(({ className, containerClassName, ...props }, ref) => (\\n  <OTPInput\\n    ref={ref}\\n    containerClassName={cn(\\n      \\"flex items-center gap-2 has-[:disabled]:opacity-50\\",\\n      containerClassName\\n    )}\\n    className={cn(\\"disabled:cursor-not-allowed\\", className)}\\n    {...props}\\n  />\\n))\\nInputOTP.displayName = \\"InputOTP\\"\\n\\nconst InputOTPGroup = React.forwardRef<\\n  React.ElementRef<\\"div\\">,\\n  React.ComponentPropsWithoutRef<\\"div\\">\\n>(({ className, ...props }, ref) => (\\n  <div ref={ref} className={cn(\\"flex items-center\\", className)} {...props} />\\n))\\nInputOTPGroup.displayName = \\"InputOTPGroup\\"\\n\\nconst InputOTPSlot = React.forwardRef<\\n  React.ElementRef<\\"div\\">,\\n  React.ComponentPropsWithoutRef<\\"div\\"> & { index: number }\\n>(({ index, className, ...props }, ref) => {\\n  const inputOTPContext = React.useContext(OTPInputContext)\\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\\n\\n  return (\\n    <div\\n      ref={ref}\\n      className={cn(\\n        \\"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\\",\\n        isActive && \\"z-10 ring-2 ring-ring ring-offset-background\\",\\n        className\\n      )}\\n      {...props}\\n    >\\n      {char}\\n      {hasFakeCaret && (\\n        <div className=\\"pointer-events-none absolute inset-0 flex items-center justify-center\\">\\n          <div className=\\"h-4 w-px animate-caret-blink bg-foreground duration-1000\\" />\\n        </div>\\n      )}\\n    </div>\\n  )\\n})\\nInputOTPSlot.displayName = \\"InputOTPSlot\\"\\n\\nconst InputOTPSeparator = React.forwardRef<\\n  React.ElementRef<\\"div\\">,\\n  React.ComponentPropsWithoutRef<\\"div\\">\\n>(({ ...props }, ref) => (\\n  <div ref={ref} role=\\"separator\\" {...props}>\\n    <Dot />\\n  </div>\\n))\\nInputOTPSeparator.displayName = \\"InputOTPSeparator\\"\\n\\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\\n","input":"import * as React from \\"react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\\"input\\">>(\\n  ({ className, type, ...props }, ref) => {\\n    return (\\n      <input\\n        type={type}\\n        className={cn(\\n          \\"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\\",\\n          className\\n        )}\\n        ref={ref}\\n        {...props}\\n      />\\n    )\\n  }\\n)\\nInput.displayName = \\"Input\\"\\n\\nexport { Input }\\n","label":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as LabelPrimitive from \\"@radix-ui/react-label\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst labelVariants = cva(\\n  \\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\\"\\n)\\n\\nconst Label = React.forwardRef<\\n  React.ElementRef<typeof LabelPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\\n    VariantProps<typeof labelVariants>\\n>(({ className, ...props }, ref) => (\\n  <LabelPrimitive.Root\\n    ref={ref}\\n    className={cn(labelVariants(), className)}\\n    {...props}\\n  />\\n))\\nLabel.displayName = LabelPrimitive.Root.displayName\\n\\nexport { Label }\\n","menubar":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as MenubarPrimitive from \\"@radix-ui/react-menubar\\"\\nimport { Check, ChevronRight, Circle } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst MenubarMenu = MenubarPrimitive.Menu\\n\\nconst MenubarGroup = MenubarPrimitive.Group\\n\\nconst MenubarPortal = MenubarPrimitive.Portal\\n\\nconst MenubarSub = MenubarPrimitive.Sub\\n\\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\\n\\nconst Menubar = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\\n>(({ className, ...props }, ref) => (\\n  <MenubarPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nMenubar.displayName = MenubarPrimitive.Root.displayName\\n\\nconst MenubarTrigger = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\\n>(({ className, ...props }, ref) => (\\n  <MenubarPrimitive.Trigger\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\\n\\nconst MenubarSubTrigger = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, children, ...props }, ref) => (\\n  <MenubarPrimitive.SubTrigger\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {children}\\n    <ChevronRight className=\\"ml-auto h-4 w-4\\" />\\n  </MenubarPrimitive.SubTrigger>\\n))\\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\\n\\nconst MenubarSubContent = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\\n>(({ className, ...props }, ref) => (\\n  <MenubarPrimitive.SubContent\\n    ref={ref}\\n    className={cn(\\n      \\"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\\n\\nconst MenubarContent = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\\n>(\\n  (\\n    { className, align = \\"start\\", alignOffset = -4, sideOffset = 8, ...props },\\n    ref\\n  ) => (\\n    <MenubarPrimitive.Portal>\\n      <MenubarPrimitive.Content\\n        ref={ref}\\n        align={align}\\n        alignOffset={alignOffset}\\n        sideOffset={sideOffset}\\n        className={cn(\\n          \\"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n          className\\n        )}\\n        {...props}\\n      />\\n    </MenubarPrimitive.Portal>\\n  )\\n)\\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\\n\\nconst MenubarItem = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <MenubarPrimitive.Item\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\\n\\nconst MenubarCheckboxItem = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\\n>(({ className, children, checked, ...props }, ref) => (\\n  <MenubarPrimitive.CheckboxItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    checked={checked}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <MenubarPrimitive.ItemIndicator>\\n        <Check className=\\"h-4 w-4\\" />\\n      </MenubarPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </MenubarPrimitive.CheckboxItem>\\n))\\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\\n\\nconst MenubarRadioItem = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\\n>(({ className, children, ...props }, ref) => (\\n  <MenubarPrimitive.RadioItem\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <MenubarPrimitive.ItemIndicator>\\n        <Circle className=\\"h-2 w-2 fill-current\\" />\\n      </MenubarPrimitive.ItemIndicator>\\n    </span>\\n    {children}\\n  </MenubarPrimitive.RadioItem>\\n))\\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\\n\\nconst MenubarLabel = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Label>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\\n    inset?: boolean\\n  }\\n>(({ className, inset, ...props }, ref) => (\\n  <MenubarPrimitive.Label\\n    ref={ref}\\n    className={cn(\\n      \\"px-2 py-1.5 text-sm font-semibold\\",\\n      inset && \\"pl-8\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\\n\\nconst MenubarSeparator = React.forwardRef<\\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\\n>(({ className, ...props }, ref) => (\\n  <MenubarPrimitive.Separator\\n    ref={ref}\\n    className={cn(\\"-mx-1 my-1 h-px bg-muted\\", className)}\\n    {...props}\\n  />\\n))\\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\\n\\nconst MenubarShortcut = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLSpanElement>) => {\\n  return (\\n    <span\\n      className={cn(\\n        \\"ml-auto text-xs tracking-widest text-muted-foreground\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n}\\nMenubarShortcut.displayname = \\"MenubarShortcut\\"\\n\\nexport {\\n  Menubar,\\n  MenubarMenu,\\n  MenubarTrigger,\\n  MenubarContent,\\n  MenubarItem,\\n  MenubarSeparator,\\n  MenubarLabel,\\n  MenubarCheckboxItem,\\n  MenubarRadioGroup,\\n  MenubarRadioItem,\\n  MenubarPortal,\\n  MenubarSubContent,\\n  MenubarSubTrigger,\\n  MenubarGroup,\\n  MenubarSub,\\n  MenubarShortcut,\\n}\\n","navigation-menu":"import * as React from \\"react\\"\\nimport * as NavigationMenuPrimitive from \\"@radix-ui/react-navigation-menu\\"\\nimport { cva } from \\"class-variance-authority\\"\\nimport { ChevronDown } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst NavigationMenu = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\\n>(({ className, children, ...props }, ref) => (\\n  <NavigationMenuPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"relative z-10 flex max-w-max flex-1 items-center justify-center\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {children}\\n    <NavigationMenuViewport />\\n  </NavigationMenuPrimitive.Root>\\n))\\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\\n\\nconst NavigationMenuList = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\\n>(({ className, ...props }, ref) => (\\n  <NavigationMenuPrimitive.List\\n    ref={ref}\\n    className={cn(\\n      \\"group flex flex-1 list-none items-center justify-center space-x-1\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\\n\\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\\n\\nconst navigationMenuTriggerStyle = cva(\\n  \\"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\\"\\n)\\n\\nconst NavigationMenuTrigger = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\\n>(({ className, children, ...props }, ref) => (\\n  <NavigationMenuPrimitive.Trigger\\n    ref={ref}\\n    className={cn(navigationMenuTriggerStyle(), \\"group\\", className)}\\n    {...props}\\n  >\\n    {children}{\\" \\"}\\n    <ChevronDown\\n      className=\\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\\"\\n      aria-hidden=\\"true\\"\\n    />\\n  </NavigationMenuPrimitive.Trigger>\\n))\\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\\n\\nconst NavigationMenuContent = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\\n>(({ className, ...props }, ref) => (\\n  <NavigationMenuPrimitive.Content\\n    ref={ref}\\n    className={cn(\\n      \\"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\\n\\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\\n\\nconst NavigationMenuViewport = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\\n>(({ className, ...props }, ref) => (\\n  <div className={cn(\\"absolute left-0 top-full flex justify-center\\")}>\\n    <NavigationMenuPrimitive.Viewport\\n      className={cn(\\n        \\"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\\",\\n        className\\n      )}\\n      ref={ref}\\n      {...props}\\n    />\\n  </div>\\n))\\nNavigationMenuViewport.displayName =\\n  NavigationMenuPrimitive.Viewport.displayName\\n\\nconst NavigationMenuIndicator = React.forwardRef<\\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\\n>(({ className, ...props }, ref) => (\\n  <NavigationMenuPrimitive.Indicator\\n    ref={ref}\\n    className={cn(\\n      \\"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <div className=\\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\\" />\\n  </NavigationMenuPrimitive.Indicator>\\n))\\nNavigationMenuIndicator.displayName =\\n  NavigationMenuPrimitive.Indicator.displayName\\n\\nexport {\\n  navigationMenuTriggerStyle,\\n  NavigationMenu,\\n  NavigationMenuList,\\n  NavigationMenuItem,\\n  NavigationMenuContent,\\n  NavigationMenuTrigger,\\n  NavigationMenuLink,\\n  NavigationMenuIndicator,\\n  NavigationMenuViewport,\\n}\\n","pagination":"import * as React from \\"react\\"\\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { ButtonProps, buttonVariants } from \\"@/components/ui/button\\"\\n\\nconst Pagination = ({ className, ...props }: React.ComponentProps<\\"nav\\">) => (\\n  <nav\\n    role=\\"navigation\\"\\n    aria-label=\\"pagination\\"\\n    className={cn(\\"mx-auto flex w-full justify-center\\", className)}\\n    {...props}\\n  />\\n)\\nPagination.displayName = \\"Pagination\\"\\n\\nconst PaginationContent = React.forwardRef<\\n  HTMLUListElement,\\n  React.ComponentProps<\\"ul\\">\\n>(({ className, ...props }, ref) => (\\n  <ul\\n    ref={ref}\\n    className={cn(\\"flex flex-row items-center gap-1\\", className)}\\n    {...props}\\n  />\\n))\\nPaginationContent.displayName = \\"PaginationContent\\"\\n\\nconst PaginationItem = React.forwardRef<\\n  HTMLLIElement,\\n  React.ComponentProps<\\"li\\">\\n>(({ className, ...props }, ref) => (\\n  <li ref={ref} className={cn(\\"\\", className)} {...props} />\\n))\\nPaginationItem.displayName = \\"PaginationItem\\"\\n\\ntype PaginationLinkProps = {\\n  isActive?: boolean\\n} & Pick<ButtonProps, \\"size\\"> &\\n  React.ComponentProps<\\"a\\">\\n\\nconst PaginationLink = ({\\n  className,\\n  isActive,\\n  size = \\"icon\\",\\n  ...props\\n}: PaginationLinkProps) => (\\n  <a\\n    aria-current={isActive ? \\"page\\" : undefined}\\n    className={cn(\\n      buttonVariants({\\n        variant: isActive ? \\"outline\\" : \\"ghost\\",\\n        size,\\n      }),\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nPaginationLink.displayName = \\"PaginationLink\\"\\n\\nconst PaginationPrevious = ({\\n  className,\\n  ...props\\n}: React.ComponentProps<typeof PaginationLink>) => (\\n  <PaginationLink\\n    aria-label=\\"Go to previous page\\"\\n    size=\\"default\\"\\n    className={cn(\\"gap-1 pl-2.5\\", className)}\\n    {...props}\\n  >\\n    <ChevronLeft className=\\"h-4 w-4\\" />\\n    <span>Previous</span>\\n  </PaginationLink>\\n)\\nPaginationPrevious.displayName = \\"PaginationPrevious\\"\\n\\nconst PaginationNext = ({\\n  className,\\n  ...props\\n}: React.ComponentProps<typeof PaginationLink>) => (\\n  <PaginationLink\\n    aria-label=\\"Go to next page\\"\\n    size=\\"default\\"\\n    className={cn(\\"gap-1 pr-2.5\\", className)}\\n    {...props}\\n  >\\n    <span>Next</span>\\n    <ChevronRight className=\\"h-4 w-4\\" />\\n  </PaginationLink>\\n)\\nPaginationNext.displayName = \\"PaginationNext\\"\\n\\nconst PaginationEllipsis = ({\\n  className,\\n  ...props\\n}: React.ComponentProps<\\"span\\">) => (\\n  <span\\n    aria-hidden\\n    className={cn(\\"flex h-9 w-9 items-center justify-center\\", className)}\\n    {...props}\\n  >\\n    <MoreHorizontal className=\\"h-4 w-4\\" />\\n    <span className=\\"sr-only\\">More pages</span>\\n  </span>\\n)\\nPaginationEllipsis.displayName = \\"PaginationEllipsis\\"\\n\\nexport {\\n  Pagination,\\n  PaginationContent,\\n  PaginationEllipsis,\\n  PaginationItem,\\n  PaginationLink,\\n  PaginationNext,\\n  PaginationPrevious,\\n}\\n","popover":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as PopoverPrimitive from \\"@radix-ui/react-popover\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Popover = PopoverPrimitive.Root\\n\\nconst PopoverTrigger = PopoverPrimitive.Trigger\\n\\nconst PopoverContent = React.forwardRef<\\n  React.ElementRef<typeof PopoverPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\\n>(({ className, align = \\"center\\", sideOffset = 4, ...props }, ref) => (\\n  <PopoverPrimitive.Portal>\\n    <PopoverPrimitive.Content\\n      ref={ref}\\n      align={align}\\n      sideOffset={sideOffset}\\n      className={cn(\\n        \\"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  </PopoverPrimitive.Portal>\\n))\\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\\n\\nexport { Popover, PopoverTrigger, PopoverContent }\\n","progress":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as ProgressPrimitive from \\"@radix-ui/react-progress\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Progress = React.forwardRef<\\n  React.ElementRef<typeof ProgressPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\\n>(({ className, value, ...props }, ref) => (\\n  <ProgressPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"relative h-4 w-full overflow-hidden rounded-full bg-secondary\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <ProgressPrimitive.Indicator\\n      className=\\"h-full w-full flex-1 bg-primary transition-all\\"\\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\\n    />\\n  </ProgressPrimitive.Root>\\n))\\nProgress.displayName = ProgressPrimitive.Root.displayName\\n\\nexport { Progress }\\n","radio-group":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as RadioGroupPrimitive from \\"@radix-ui/react-radio-group\\"\\nimport { Circle } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst RadioGroup = React.forwardRef<\\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <RadioGroupPrimitive.Root\\n      className={cn(\\"grid gap-2\\", className)}\\n      {...props}\\n      ref={ref}\\n    />\\n  )\\n})\\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\\n\\nconst RadioGroupItem = React.forwardRef<\\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <RadioGroupPrimitive.Item\\n      ref={ref}\\n      className={cn(\\n        \\"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\\",\\n        className\\n      )}\\n      {...props}\\n    >\\n      <RadioGroupPrimitive.Indicator className=\\"flex items-center justify-center\\">\\n        <Circle className=\\"h-2.5 w-2.5 fill-current text-current\\" />\\n      </RadioGroupPrimitive.Indicator>\\n    </RadioGroupPrimitive.Item>\\n  )\\n})\\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\\n\\nexport { RadioGroup, RadioGroupItem }\\n","resizable":"\\"use client\\"\\n\\nimport { GripVertical } from \\"lucide-react\\"\\nimport * as ResizablePrimitive from \\"react-resizable-panels\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst ResizablePanelGroup = ({\\n  className,\\n  ...props\\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\\n  <ResizablePrimitive.PanelGroup\\n    className={cn(\\n      \\"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\n\\nconst ResizablePanel = ResizablePrimitive.Panel\\n\\nconst ResizableHandle = ({\\n  withHandle,\\n  className,\\n  ...props\\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\\n  withHandle?: boolean\\n}) => (\\n  <ResizablePrimitive.PanelResizeHandle\\n    className={cn(\\n      \\"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {withHandle && (\\n      <div className=\\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\\">\\n        <GripVertical className=\\"h-2.5 w-2.5\\" />\\n      </div>\\n    )}\\n  </ResizablePrimitive.PanelResizeHandle>\\n)\\n\\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\\n","scroll-area":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as ScrollAreaPrimitive from \\"@radix-ui/react-scroll-area\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst ScrollArea = React.forwardRef<\\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\\n>(({ className, children, ...props }, ref) => (\\n  <ScrollAreaPrimitive.Root\\n    ref={ref}\\n    className={cn(\\"relative overflow-hidden\\", className)}\\n    {...props}\\n  >\\n    <ScrollAreaPrimitive.Viewport className=\\"h-full w-full rounded-[inherit]\\">\\n      {children}\\n    </ScrollAreaPrimitive.Viewport>\\n    <ScrollBar />\\n    <ScrollAreaPrimitive.Corner />\\n  </ScrollAreaPrimitive.Root>\\n))\\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\\n\\nconst ScrollBar = React.forwardRef<\\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\\n>(({ className, orientation = \\"vertical\\", ...props }, ref) => (\\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\\n    ref={ref}\\n    orientation={orientation}\\n    className={cn(\\n      \\"flex touch-none select-none transition-colors\\",\\n      orientation === \\"vertical\\" &&\\n        \\"h-full w-2.5 border-l border-l-transparent p-[1px]\\",\\n      orientation === \\"horizontal\\" &&\\n        \\"h-2.5 flex-col border-t border-t-transparent p-[1px]\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\\"relative flex-1 rounded-full bg-border\\" />\\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\\n))\\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\\n\\nexport { ScrollArea, ScrollBar }\\n","select":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as SelectPrimitive from \\"@radix-ui/react-select\\"\\nimport { Check, ChevronDown, ChevronUp } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Select = SelectPrimitive.Root\\n\\nconst SelectGroup = SelectPrimitive.Group\\n\\nconst SelectValue = SelectPrimitive.Value\\n\\nconst SelectTrigger = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\\n>(({ className, children, ...props }, ref) => (\\n  <SelectPrimitive.Trigger\\n    ref={ref}\\n    className={cn(\\n      \\"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    {children}\\n    <SelectPrimitive.Icon asChild>\\n      <ChevronDown className=\\"h-4 w-4 opacity-50\\" />\\n    </SelectPrimitive.Icon>\\n  </SelectPrimitive.Trigger>\\n))\\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\\n\\nconst SelectScrollUpButton = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\\n>(({ className, ...props }, ref) => (\\n  <SelectPrimitive.ScrollUpButton\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default items-center justify-center py-1\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <ChevronUp className=\\"h-4 w-4\\" />\\n  </SelectPrimitive.ScrollUpButton>\\n))\\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\\n\\nconst SelectScrollDownButton = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\\n>(({ className, ...props }, ref) => (\\n  <SelectPrimitive.ScrollDownButton\\n    ref={ref}\\n    className={cn(\\n      \\"flex cursor-default items-center justify-center py-1\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <ChevronDown className=\\"h-4 w-4\\" />\\n  </SelectPrimitive.ScrollDownButton>\\n))\\nSelectScrollDownButton.displayName =\\n  SelectPrimitive.ScrollDownButton.displayName\\n\\nconst SelectContent = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\\n>(({ className, children, position = \\"popper\\", ...props }, ref) => (\\n  <SelectPrimitive.Portal>\\n    <SelectPrimitive.Content\\n      ref={ref}\\n      className={cn(\\n        \\"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n        position === \\"popper\\" &&\\n          \\"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\\",\\n        className\\n      )}\\n      position={position}\\n      {...props}\\n    >\\n      <SelectScrollUpButton />\\n      <SelectPrimitive.Viewport\\n        className={cn(\\n          \\"p-1\\",\\n          position === \\"popper\\" &&\\n            \\"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\\"\\n        )}\\n      >\\n        {children}\\n      </SelectPrimitive.Viewport>\\n      <SelectScrollDownButton />\\n    </SelectPrimitive.Content>\\n  </SelectPrimitive.Portal>\\n))\\nSelectContent.displayName = SelectPrimitive.Content.displayName\\n\\nconst SelectLabel = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.Label>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\\n>(({ className, ...props }, ref) => (\\n  <SelectPrimitive.Label\\n    ref={ref}\\n    className={cn(\\"py-1.5 pl-8 pr-2 text-sm font-semibold\\", className)}\\n    {...props}\\n  />\\n))\\nSelectLabel.displayName = SelectPrimitive.Label.displayName\\n\\nconst SelectItem = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\\n>(({ className, children, ...props }, ref) => (\\n  <SelectPrimitive.Item\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <span className=\\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\\">\\n      <SelectPrimitive.ItemIndicator>\\n        <Check className=\\"h-4 w-4\\" />\\n      </SelectPrimitive.ItemIndicator>\\n    </span>\\n\\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\\n  </SelectPrimitive.Item>\\n))\\nSelectItem.displayName = SelectPrimitive.Item.displayName\\n\\nconst SelectSeparator = React.forwardRef<\\n  React.ElementRef<typeof SelectPrimitive.Separator>,\\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\\n>(({ className, ...props }, ref) => (\\n  <SelectPrimitive.Separator\\n    ref={ref}\\n    className={cn(\\"-mx-1 my-1 h-px bg-muted\\", className)}\\n    {...props}\\n  />\\n))\\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\\n\\nexport {\\n  Select,\\n  SelectGroup,\\n  SelectValue,\\n  SelectTrigger,\\n  SelectContent,\\n  SelectLabel,\\n  SelectItem,\\n  SelectSeparator,\\n  SelectScrollUpButton,\\n  SelectScrollDownButton,\\n}\\n","separator":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as SeparatorPrimitive from \\"@radix-ui/react-separator\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Separator = React.forwardRef<\\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\\n>(\\n  (\\n    { className, orientation = \\"horizontal\\", decorative = true, ...props },\\n    ref\\n  ) => (\\n    <SeparatorPrimitive.Root\\n      ref={ref}\\n      decorative={decorative}\\n      orientation={orientation}\\n      className={cn(\\n        \\"shrink-0 bg-border\\",\\n        orientation === \\"horizontal\\" ? \\"h-[1px] w-full\\" : \\"h-full w-[1px]\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n)\\nSeparator.displayName = SeparatorPrimitive.Root.displayName\\n\\nexport { Separator }\\n","sheet":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as SheetPrimitive from \\"@radix-ui/react-dialog\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\nimport { X } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Sheet = SheetPrimitive.Root\\n\\nconst SheetTrigger = SheetPrimitive.Trigger\\n\\nconst SheetClose = SheetPrimitive.Close\\n\\nconst SheetPortal = SheetPrimitive.Portal\\n\\nconst SheetOverlay = React.forwardRef<\\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\\n>(({ className, ...props }, ref) => (\\n  <SheetPrimitive.Overlay\\n    className={cn(\\n      \\"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\\",\\n      className\\n    )}\\n    {...props}\\n    ref={ref}\\n  />\\n))\\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\\n\\nconst sheetVariants = cva(\\n  \\"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\\",\\n  {\\n    variants: {\\n      side: {\\n        top: \\"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\\",\\n        bottom:\\n          \\"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\\",\\n        left: \\"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\\",\\n        right:\\n          \\"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\\",\\n      },\\n    },\\n    defaultVariants: {\\n      side: \\"right\\",\\n    },\\n  }\\n)\\n\\ninterface SheetContentProps\\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\\n    VariantProps<typeof sheetVariants> {}\\n\\nconst SheetContent = React.forwardRef<\\n  React.ElementRef<typeof SheetPrimitive.Content>,\\n  SheetContentProps\\n>(({ side = \\"right\\", className, children, ...props }, ref) => (\\n  <SheetPortal>\\n    <SheetOverlay />\\n    <SheetPrimitive.Content\\n      ref={ref}\\n      className={cn(sheetVariants({ side }), className)}\\n      {...props}\\n    >\\n      {children}\\n      <SheetPrimitive.Close className=\\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\\">\\n        <X className=\\"h-4 w-4\\" />\\n        <span className=\\"sr-only\\">Close</span>\\n      </SheetPrimitive.Close>\\n    </SheetPrimitive.Content>\\n  </SheetPortal>\\n))\\nSheetContent.displayName = SheetPrimitive.Content.displayName\\n\\nconst SheetHeader = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col space-y-2 text-center sm:text-left\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nSheetHeader.displayName = \\"SheetHeader\\"\\n\\nconst SheetFooter = ({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) => (\\n  <div\\n    className={cn(\\n      \\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n)\\nSheetFooter.displayName = \\"SheetFooter\\"\\n\\nconst SheetTitle = React.forwardRef<\\n  React.ElementRef<typeof SheetPrimitive.Title>,\\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\\n>(({ className, ...props }, ref) => (\\n  <SheetPrimitive.Title\\n    ref={ref}\\n    className={cn(\\"text-lg font-semibold text-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nSheetTitle.displayName = SheetPrimitive.Title.displayName\\n\\nconst SheetDescription = React.forwardRef<\\n  React.ElementRef<typeof SheetPrimitive.Description>,\\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\\n>(({ className, ...props }, ref) => (\\n  <SheetPrimitive.Description\\n    ref={ref}\\n    className={cn(\\"text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nSheetDescription.displayName = SheetPrimitive.Description.displayName\\n\\nexport {\\n  Sheet,\\n  SheetPortal,\\n  SheetOverlay,\\n  SheetTrigger,\\n  SheetClose,\\n  SheetContent,\\n  SheetHeader,\\n  SheetFooter,\\n  SheetTitle,\\n  SheetDescription,\\n}\\n","sidebar":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport { Slot } from \\"@radix-ui/react-slot\\"\\nimport { VariantProps, cva } from \\"class-variance-authority\\"\\nimport { PanelLeft } from \\"lucide-react\\"\\n\\nimport { useIsMobile } from \\"@/hooks/use-mobile\\"\\nimport { cn } from \\"@/lib/utils\\"\\nimport { Button } from \\"@/components/ui/button\\"\\nimport { Input } from \\"@/components/ui/input\\"\\nimport { Separator } from \\"@/components/ui/separator\\"\\nimport { Sheet, SheetContent } from \\"@/components/ui/sheet\\"\\nimport { Skeleton } from \\"@/components/ui/skeleton\\"\\nimport {\\n  Tooltip,\\n  TooltipContent,\\n  TooltipProvider,\\n  TooltipTrigger,\\n} from \\"@/components/ui/tooltip\\"\\n\\nconst SIDEBAR_COOKIE_NAME = \\"sidebar:state\\"\\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\\nconst SIDEBAR_WIDTH = \\"16rem\\"\\nconst SIDEBAR_WIDTH_MOBILE = \\"18rem\\"\\nconst SIDEBAR_WIDTH_ICON = \\"3rem\\"\\nconst SIDEBAR_KEYBOARD_SHORTCUT = \\"b\\"\\n\\ntype SidebarContext = {\\n  state: \\"expanded\\" | \\"collapsed\\"\\n  open: boolean\\n  setOpen: (open: boolean) => void\\n  openMobile: boolean\\n  setOpenMobile: (open: boolean) => void\\n  isMobile: boolean\\n  toggleSidebar: () => void\\n}\\n\\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\\n\\nfunction useSidebar() {\\n  const context = React.useContext(SidebarContext)\\n  if (!context) {\\n    throw new Error(\\"useSidebar must be used within a SidebarProvider.\\")\\n  }\\n\\n  return context\\n}\\n\\nconst SidebarProvider = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> & {\\n    defaultOpen?: boolean\\n    open?: boolean\\n    onOpenChange?: (open: boolean) => void\\n  }\\n>(\\n  (\\n    {\\n      defaultOpen = true,\\n      open: openProp,\\n      onOpenChange: setOpenProp,\\n      className,\\n      style,\\n      children,\\n      ...props\\n    },\\n    ref\\n  ) => {\\n    const isMobile = useIsMobile()\\n    const [openMobile, setOpenMobile] = React.useState(false)\\n\\n    // This is the internal state of the sidebar.\\n    // We use openProp and setOpenProp for control from outside the component.\\n    const [_open, _setOpen] = React.useState(defaultOpen)\\n    const open = openProp ?? _open\\n    const setOpen = React.useCallback(\\n      (value: boolean | ((value: boolean) => boolean)) => {\\n        const openState = typeof value === \\"function\\" ? value(open) : value\\n        if (setOpenProp) {\\n          setOpenProp(openState)\\n        } else {\\n          _setOpen(openState)\\n        }\\n\\n        // This sets the cookie to keep the sidebar state.\\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\\n      },\\n      [setOpenProp, open]\\n    )\\n\\n    // Helper to toggle the sidebar.\\n    const toggleSidebar = React.useCallback(() => {\\n      return isMobile\\n        ? setOpenMobile((open) => !open)\\n        : setOpen((open) => !open)\\n    }, [isMobile, setOpen, setOpenMobile])\\n\\n    // Adds a keyboard shortcut to toggle the sidebar.\\n    React.useEffect(() => {\\n      const handleKeyDown = (event: KeyboardEvent) => {\\n        if (\\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\\n          (event.metaKey || event.ctrlKey)\\n        ) {\\n          event.preventDefault()\\n          toggleSidebar()\\n        }\\n      }\\n\\n      window.addEventListener(\\"keydown\\", handleKeyDown)\\n      return () => window.removeEventListener(\\"keydown\\", handleKeyDown)\\n    }, [toggleSidebar])\\n\\n    // We add a state so that we can do data-state=\\"expanded\\" or \\"collapsed\\".\\n    // This makes it easier to style the sidebar with Tailwind classes.\\n    const state = open ? \\"expanded\\" : \\"collapsed\\"\\n\\n    const contextValue = React.useMemo<SidebarContext>(\\n      () => ({\\n        state,\\n        open,\\n        setOpen,\\n        isMobile,\\n        openMobile,\\n        setOpenMobile,\\n        toggleSidebar,\\n      }),\\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\\n    )\\n\\n    return (\\n      <SidebarContext.Provider value={contextValue}>\\n        <TooltipProvider delayDuration={0}>\\n          <div\\n            style={\\n              {\\n                \\"--sidebar-width\\": SIDEBAR_WIDTH,\\n                \\"--sidebar-width-icon\\": SIDEBAR_WIDTH_ICON,\\n                ...style,\\n              } as React.CSSProperties\\n            }\\n            className={cn(\\n              \\"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\\",\\n              className\\n            )}\\n            ref={ref}\\n            {...props}\\n          >\\n            {children}\\n          </div>\\n        </TooltipProvider>\\n      </SidebarContext.Provider>\\n    )\\n  }\\n)\\nSidebarProvider.displayName = \\"SidebarProvider\\"\\n\\nconst Sidebar = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> & {\\n    side?: \\"left\\" | \\"right\\"\\n    variant?: \\"sidebar\\" | \\"floating\\" | \\"inset\\"\\n    collapsible?: \\"offcanvas\\" | \\"icon\\" | \\"none\\"\\n  }\\n>(\\n  (\\n    {\\n      side = \\"left\\",\\n      variant = \\"sidebar\\",\\n      collapsible = \\"offcanvas\\",\\n      className,\\n      children,\\n      ...props\\n    },\\n    ref\\n  ) => {\\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\\n\\n    if (collapsible === \\"none\\") {\\n      return (\\n        <div\\n          className={cn(\\n            \\"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\\",\\n            className\\n          )}\\n          ref={ref}\\n          {...props}\\n        >\\n          {children}\\n        </div>\\n      )\\n    }\\n\\n    if (isMobile) {\\n      return (\\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\\n          <SheetContent\\n            data-sidebar=\\"sidebar\\"\\n            data-mobile=\\"true\\"\\n            className=\\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\\"\\n            style={\\n              {\\n                \\"--sidebar-width\\": SIDEBAR_WIDTH_MOBILE,\\n              } as React.CSSProperties\\n            }\\n            side={side}\\n          >\\n            <div className=\\"flex h-full w-full flex-col\\">{children}</div>\\n          </SheetContent>\\n        </Sheet>\\n      )\\n    }\\n\\n    return (\\n      <div\\n        ref={ref}\\n        className=\\"group peer hidden md:block text-sidebar-foreground\\"\\n        data-state={state}\\n        data-collapsible={state === \\"collapsed\\" ? collapsible : \\"\\"}\\n        data-variant={variant}\\n        data-side={side}\\n      >\\n        {/* This is what handles the sidebar gap on desktop */}\\n        <div\\n          className={cn(\\n            \\"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\\",\\n            \\"group-data-[collapsible=offcanvas]:w-0\\",\\n            \\"group-data-[side=right]:rotate-180\\",\\n            variant === \\"floating\\" || variant === \\"inset\\"\\n              ? \\"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\\"\\n              : \\"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\\"\\n          )}\\n        />\\n        <div\\n          className={cn(\\n            \\"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\\",\\n            side === \\"left\\"\\n              ? \\"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\\"\\n              : \\"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\\",\\n            // Adjust the padding for floating and inset variants.\\n            variant === \\"floating\\" || variant === \\"inset\\"\\n              ? \\"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\\"\\n              : \\"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\\",\\n            className\\n          )}\\n          {...props}\\n        >\\n          <div\\n            data-sidebar=\\"sidebar\\"\\n            className=\\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\\"\\n          >\\n            {children}\\n          </div>\\n        </div>\\n      </div>\\n    )\\n  }\\n)\\nSidebar.displayName = \\"Sidebar\\"\\n\\nconst SidebarTrigger = React.forwardRef<\\n  React.ElementRef<typeof Button>,\\n  React.ComponentProps<typeof Button>\\n>(({ className, onClick, ...props }, ref) => {\\n  const { toggleSidebar } = useSidebar()\\n\\n  return (\\n    <Button\\n      ref={ref}\\n      data-sidebar=\\"trigger\\"\\n      variant=\\"ghost\\"\\n      size=\\"icon\\"\\n      className={cn(\\"h-7 w-7\\", className)}\\n      onClick={(event) => {\\n        onClick?.(event)\\n        toggleSidebar()\\n      }}\\n      {...props}\\n    >\\n      <PanelLeft />\\n      <span className=\\"sr-only\\">Toggle Sidebar</span>\\n    </Button>\\n  )\\n})\\nSidebarTrigger.displayName = \\"SidebarTrigger\\"\\n\\nconst SidebarRail = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<\\"button\\">\\n>(({ className, ...props }, ref) => {\\n  const { toggleSidebar } = useSidebar()\\n\\n  return (\\n    <button\\n      ref={ref}\\n      data-sidebar=\\"rail\\"\\n      aria-label=\\"Toggle Sidebar\\"\\n      tabIndex={-1}\\n      onClick={toggleSidebar}\\n      title=\\"Toggle Sidebar\\"\\n      className={cn(\\n        \\"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\\",\\n        \\"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\\",\\n        \\"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\\",\\n        \\"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\\",\\n        \\"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\\",\\n        \\"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarRail.displayName = \\"SidebarRail\\"\\n\\nconst SidebarInset = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"main\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <main\\n      ref={ref}\\n      className={cn(\\n        \\"relative flex min-h-svh flex-1 flex-col bg-background\\",\\n        \\"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarInset.displayName = \\"SidebarInset\\"\\n\\nconst SidebarInput = React.forwardRef<\\n  React.ElementRef<typeof Input>,\\n  React.ComponentProps<typeof Input>\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <Input\\n      ref={ref}\\n      data-sidebar=\\"input\\"\\n      className={cn(\\n        \\"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarInput.displayName = \\"SidebarInput\\"\\n\\nconst SidebarHeader = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <div\\n      ref={ref}\\n      data-sidebar=\\"header\\"\\n      className={cn(\\"flex flex-col gap-2 p-2\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarHeader.displayName = \\"SidebarHeader\\"\\n\\nconst SidebarFooter = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <div\\n      ref={ref}\\n      data-sidebar=\\"footer\\"\\n      className={cn(\\"flex flex-col gap-2 p-2\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarFooter.displayName = \\"SidebarFooter\\"\\n\\nconst SidebarSeparator = React.forwardRef<\\n  React.ElementRef<typeof Separator>,\\n  React.ComponentProps<typeof Separator>\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <Separator\\n      ref={ref}\\n      data-sidebar=\\"separator\\"\\n      className={cn(\\"mx-2 w-auto bg-sidebar-border\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarSeparator.displayName = \\"SidebarSeparator\\"\\n\\nconst SidebarContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <div\\n      ref={ref}\\n      data-sidebar=\\"content\\"\\n      className={cn(\\n        \\"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarContent.displayName = \\"SidebarContent\\"\\n\\nconst SidebarGroup = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <div\\n      ref={ref}\\n      data-sidebar=\\"group\\"\\n      className={cn(\\"relative flex w-full min-w-0 flex-col p-2\\", className)}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarGroup.displayName = \\"SidebarGroup\\"\\n\\nconst SidebarGroupLabel = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> & { asChild?: boolean }\\n>(({ className, asChild = false, ...props }, ref) => {\\n  const Comp = asChild ? Slot : \\"div\\"\\n\\n  return (\\n    <Comp\\n      ref={ref}\\n      data-sidebar=\\"group-label\\"\\n      className={cn(\\n        \\"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\\",\\n        \\"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarGroupLabel.displayName = \\"SidebarGroupLabel\\"\\n\\nconst SidebarGroupAction = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<\\"button\\"> & { asChild?: boolean }\\n>(({ className, asChild = false, ...props }, ref) => {\\n  const Comp = asChild ? Slot : \\"button\\"\\n\\n  return (\\n    <Comp\\n      ref={ref}\\n      data-sidebar=\\"group-action\\"\\n      className={cn(\\n        \\"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\\",\\n        // Increases the hit area of the button on mobile.\\n        \\"after:absolute after:-inset-2 after:md:hidden\\",\\n        \\"group-data-[collapsible=icon]:hidden\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarGroupAction.displayName = \\"SidebarGroupAction\\"\\n\\nconst SidebarGroupContent = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    data-sidebar=\\"group-content\\"\\n    className={cn(\\"w-full text-sm\\", className)}\\n    {...props}\\n  />\\n))\\nSidebarGroupContent.displayName = \\"SidebarGroupContent\\"\\n\\nconst SidebarMenu = React.forwardRef<\\n  HTMLUListElement,\\n  React.ComponentProps<\\"ul\\">\\n>(({ className, ...props }, ref) => (\\n  <ul\\n    ref={ref}\\n    data-sidebar=\\"menu\\"\\n    className={cn(\\"flex w-full min-w-0 flex-col gap-1\\", className)}\\n    {...props}\\n  />\\n))\\nSidebarMenu.displayName = \\"SidebarMenu\\"\\n\\nconst SidebarMenuItem = React.forwardRef<\\n  HTMLLIElement,\\n  React.ComponentProps<\\"li\\">\\n>(({ className, ...props }, ref) => (\\n  <li\\n    ref={ref}\\n    data-sidebar=\\"menu-item\\"\\n    className={cn(\\"group/menu-item relative\\", className)}\\n    {...props}\\n  />\\n))\\nSidebarMenuItem.displayName = \\"SidebarMenuItem\\"\\n\\nconst sidebarMenuButtonVariants = cva(\\n  \\"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\\",\\n        outline:\\n          \\"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\\",\\n      },\\n      size: {\\n        default: \\"h-8 text-sm\\",\\n        sm: \\"h-7 text-xs\\",\\n        lg: \\"h-12 text-sm group-data-[collapsible=icon]:!p-0\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n      size: \\"default\\",\\n    },\\n  }\\n)\\n\\nconst SidebarMenuButton = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<\\"button\\"> & {\\n    asChild?: boolean\\n    isActive?: boolean\\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\\n  } & VariantProps<typeof sidebarMenuButtonVariants>\\n>(\\n  (\\n    {\\n      asChild = false,\\n      isActive = false,\\n      variant = \\"default\\",\\n      size = \\"default\\",\\n      tooltip,\\n      className,\\n      ...props\\n    },\\n    ref\\n  ) => {\\n    const Comp = asChild ? Slot : \\"button\\"\\n    const { isMobile, state } = useSidebar()\\n\\n    const button = (\\n      <Comp\\n        ref={ref}\\n        data-sidebar=\\"menu-button\\"\\n        data-size={size}\\n        data-active={isActive}\\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\\n        {...props}\\n      />\\n    )\\n\\n    if (!tooltip) {\\n      return button\\n    }\\n\\n    if (typeof tooltip === \\"string\\") {\\n      tooltip = {\\n        children: tooltip,\\n      }\\n    }\\n\\n    return (\\n      <Tooltip>\\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\\n        <TooltipContent\\n          side=\\"right\\"\\n          align=\\"center\\"\\n          hidden={state !== \\"collapsed\\" || isMobile}\\n          {...tooltip}\\n        />\\n      </Tooltip>\\n    )\\n  }\\n)\\nSidebarMenuButton.displayName = \\"SidebarMenuButton\\"\\n\\nconst SidebarMenuAction = React.forwardRef<\\n  HTMLButtonElement,\\n  React.ComponentProps<\\"button\\"> & {\\n    asChild?: boolean\\n    showOnHover?: boolean\\n  }\\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\\n  const Comp = asChild ? Slot : \\"button\\"\\n\\n  return (\\n    <Comp\\n      ref={ref}\\n      data-sidebar=\\"menu-action\\"\\n      className={cn(\\n        \\"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\\",\\n        // Increases the hit area of the button on mobile.\\n        \\"after:absolute after:-inset-2 after:md:hidden\\",\\n        \\"peer-data-[size=sm]/menu-button:top-1\\",\\n        \\"peer-data-[size=default]/menu-button:top-1.5\\",\\n        \\"peer-data-[size=lg]/menu-button:top-2.5\\",\\n        \\"group-data-[collapsible=icon]:hidden\\",\\n        showOnHover &&\\n          \\"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarMenuAction.displayName = \\"SidebarMenuAction\\"\\n\\nconst SidebarMenuBadge = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\">\\n>(({ className, ...props }, ref) => (\\n  <div\\n    ref={ref}\\n    data-sidebar=\\"menu-badge\\"\\n    className={cn(\\n      \\"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\\",\\n      \\"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\\",\\n      \\"peer-data-[size=sm]/menu-button:top-1\\",\\n      \\"peer-data-[size=default]/menu-button:top-1.5\\",\\n      \\"peer-data-[size=lg]/menu-button:top-2.5\\",\\n      \\"group-data-[collapsible=icon]:hidden\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nSidebarMenuBadge.displayName = \\"SidebarMenuBadge\\"\\n\\nconst SidebarMenuSkeleton = React.forwardRef<\\n  HTMLDivElement,\\n  React.ComponentProps<\\"div\\"> & {\\n    showIcon?: boolean\\n  }\\n>(({ className, showIcon = false, ...props }, ref) => {\\n  // Random width between 50 to 90%.\\n  const width = React.useMemo(() => {\\n    return `${Math.floor(Math.random() * 40) + 50}%`\\n  }, [])\\n\\n  return (\\n    <div\\n      ref={ref}\\n      data-sidebar=\\"menu-skeleton\\"\\n      className={cn(\\"rounded-md h-8 flex gap-2 px-2 items-center\\", className)}\\n      {...props}\\n    >\\n      {showIcon && (\\n        <Skeleton\\n          className=\\"size-4 rounded-md\\"\\n          data-sidebar=\\"menu-skeleton-icon\\"\\n        />\\n      )}\\n      <Skeleton\\n        className=\\"h-4 flex-1 max-w-[--skeleton-width]\\"\\n        data-sidebar=\\"menu-skeleton-text\\"\\n        style={\\n          {\\n            \\"--skeleton-width\\": width,\\n          } as React.CSSProperties\\n        }\\n      />\\n    </div>\\n  )\\n})\\nSidebarMenuSkeleton.displayName = \\"SidebarMenuSkeleton\\"\\n\\nconst SidebarMenuSub = React.forwardRef<\\n  HTMLUListElement,\\n  React.ComponentProps<\\"ul\\">\\n>(({ className, ...props }, ref) => (\\n  <ul\\n    ref={ref}\\n    data-sidebar=\\"menu-sub\\"\\n    className={cn(\\n      \\"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\\",\\n      \\"group-data-[collapsible=icon]:hidden\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nSidebarMenuSub.displayName = \\"SidebarMenuSub\\"\\n\\nconst SidebarMenuSubItem = React.forwardRef<\\n  HTMLLIElement,\\n  React.ComponentProps<\\"li\\">\\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\\nSidebarMenuSubItem.displayName = \\"SidebarMenuSubItem\\"\\n\\nconst SidebarMenuSubButton = React.forwardRef<\\n  HTMLAnchorElement,\\n  React.ComponentProps<\\"a\\"> & {\\n    asChild?: boolean\\n    size?: \\"sm\\" | \\"md\\"\\n    isActive?: boolean\\n  }\\n>(({ asChild = false, size = \\"md\\", isActive, className, ...props }, ref) => {\\n  const Comp = asChild ? Slot : \\"a\\"\\n\\n  return (\\n    <Comp\\n      ref={ref}\\n      data-sidebar=\\"menu-sub-button\\"\\n      data-size={size}\\n      data-active={isActive}\\n      className={cn(\\n        \\"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\\",\\n        \\"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\\",\\n        size === \\"sm\\" && \\"text-xs\\",\\n        size === \\"md\\" && \\"text-sm\\",\\n        \\"group-data-[collapsible=icon]:hidden\\",\\n        className\\n      )}\\n      {...props}\\n    />\\n  )\\n})\\nSidebarMenuSubButton.displayName = \\"SidebarMenuSubButton\\"\\n\\nexport {\\n  Sidebar,\\n  SidebarContent,\\n  SidebarFooter,\\n  SidebarGroup,\\n  SidebarGroupAction,\\n  SidebarGroupContent,\\n  SidebarGroupLabel,\\n  SidebarHeader,\\n  SidebarInput,\\n  SidebarInset,\\n  SidebarMenu,\\n  SidebarMenuAction,\\n  SidebarMenuBadge,\\n  SidebarMenuButton,\\n  SidebarMenuItem,\\n  SidebarMenuSkeleton,\\n  SidebarMenuSub,\\n  SidebarMenuSubButton,\\n  SidebarMenuSubItem,\\n  SidebarProvider,\\n  SidebarRail,\\n  SidebarSeparator,\\n  SidebarTrigger,\\n  useSidebar,\\n}\\n","skeleton":"import { cn } from \\"@/lib/utils\\"\\n\\nfunction Skeleton({\\n  className,\\n  ...props\\n}: React.HTMLAttributes<HTMLDivElement>) {\\n  return (\\n    <div\\n      className={cn(\\"animate-pulse rounded-md bg-muted\\", className)}\\n      {...props}\\n    />\\n  )\\n}\\n\\nexport { Skeleton }\\n","slider":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as SliderPrimitive from \\"@radix-ui/react-slider\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Slider = React.forwardRef<\\n  React.ElementRef<typeof SliderPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\\n>(({ className, ...props }, ref) => (\\n  <SliderPrimitive.Root\\n    ref={ref}\\n    className={cn(\\n      \\"relative flex w-full touch-none select-none items-center\\",\\n      className\\n    )}\\n    {...props}\\n  >\\n    <SliderPrimitive.Track className=\\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\\">\\n      <SliderPrimitive.Range className=\\"absolute h-full bg-primary\\" />\\n    </SliderPrimitive.Track>\\n    <SliderPrimitive.Thumb className=\\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\\" />\\n  </SliderPrimitive.Root>\\n))\\nSlider.displayName = SliderPrimitive.Root.displayName\\n\\nexport { Slider }\\n","sonner":"\\"use client\\"\\n\\nimport { useTheme } from \\"next-themes\\"\\nimport { Toaster as Sonner } from \\"sonner\\"\\n\\ntype ToasterProps = React.ComponentProps<typeof Sonner>\\n\\nconst Toaster = ({ ...props }: ToasterProps) => {\\n  const { theme = \\"system\\" } = useTheme()\\n\\n  return (\\n    <Sonner\\n      theme={theme as ToasterProps[\\"theme\\"]}\\n      className=\\"toaster group\\"\\n      toastOptions={{\\n        classNames: {\\n          toast:\\n            \\"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\\",\\n          description: \\"group-[.toast]:text-muted-foreground\\",\\n          actionButton:\\n            \\"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\\",\\n          cancelButton:\\n            \\"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\\",\\n        },\\n      }}\\n      {...props}\\n    />\\n  )\\n}\\n\\nexport { Toaster }\\n","switch":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as SwitchPrimitives from \\"@radix-ui/react-switch\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Switch = React.forwardRef<\\n  React.ElementRef<typeof SwitchPrimitives.Root>,\\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\\n>(({ className, ...props }, ref) => (\\n  <SwitchPrimitives.Root\\n    className={cn(\\n      \\"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\\",\\n      className\\n    )}\\n    {...props}\\n    ref={ref}\\n  >\\n    <SwitchPrimitives.Thumb\\n      className={cn(\\n        \\"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\\"\\n      )}\\n    />\\n  </SwitchPrimitives.Root>\\n))\\nSwitch.displayName = SwitchPrimitives.Root.displayName\\n\\nexport { Switch }\\n","table":"import * as React from \\"react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Table = React.forwardRef<\\n  HTMLTableElement,\\n  React.HTMLAttributes<HTMLTableElement>\\n>(({ className, ...props }, ref) => (\\n  <div className=\\"relative w-full overflow-auto\\">\\n    <table\\n      ref={ref}\\n      className={cn(\\"w-full caption-bottom text-sm\\", className)}\\n      {...props}\\n    />\\n  </div>\\n))\\nTable.displayName = \\"Table\\"\\n\\nconst TableHeader = React.forwardRef<\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes<HTMLTableSectionElement>\\n>(({ className, ...props }, ref) => (\\n  <thead ref={ref} className={cn(\\"[&_tr]:border-b\\", className)} {...props} />\\n))\\nTableHeader.displayName = \\"TableHeader\\"\\n\\nconst TableBody = React.forwardRef<\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes<HTMLTableSectionElement>\\n>(({ className, ...props }, ref) => (\\n  <tbody\\n    ref={ref}\\n    className={cn(\\"[&_tr:last-child]:border-0\\", className)}\\n    {...props}\\n  />\\n))\\nTableBody.displayName = \\"TableBody\\"\\n\\nconst TableFooter = React.forwardRef<\\n  HTMLTableSectionElement,\\n  React.HTMLAttributes<HTMLTableSectionElement>\\n>(({ className, ...props }, ref) => (\\n  <tfoot\\n    ref={ref}\\n    className={cn(\\n      \\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTableFooter.displayName = \\"TableFooter\\"\\n\\nconst TableRow = React.forwardRef<\\n  HTMLTableRowElement,\\n  React.HTMLAttributes<HTMLTableRowElement>\\n>(({ className, ...props }, ref) => (\\n  <tr\\n    ref={ref}\\n    className={cn(\\n      \\"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTableRow.displayName = \\"TableRow\\"\\n\\nconst TableHead = React.forwardRef<\\n  HTMLTableCellElement,\\n  React.ThHTMLAttributes<HTMLTableCellElement>\\n>(({ className, ...props }, ref) => (\\n  <th\\n    ref={ref}\\n    className={cn(\\n      \\"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTableHead.displayName = \\"TableHead\\"\\n\\nconst TableCell = React.forwardRef<\\n  HTMLTableCellElement,\\n  React.TdHTMLAttributes<HTMLTableCellElement>\\n>(({ className, ...props }, ref) => (\\n  <td\\n    ref={ref}\\n    className={cn(\\"p-4 align-middle [&:has([role=checkbox])]:pr-0\\", className)}\\n    {...props}\\n  />\\n))\\nTableCell.displayName = \\"TableCell\\"\\n\\nconst TableCaption = React.forwardRef<\\n  HTMLTableCaptionElement,\\n  React.HTMLAttributes<HTMLTableCaptionElement>\\n>(({ className, ...props }, ref) => (\\n  <caption\\n    ref={ref}\\n    className={cn(\\"mt-4 text-sm text-muted-foreground\\", className)}\\n    {...props}\\n  />\\n))\\nTableCaption.displayName = \\"TableCaption\\"\\n\\nexport {\\n  Table,\\n  TableHeader,\\n  TableBody,\\n  TableFooter,\\n  TableHead,\\n  TableRow,\\n  TableCell,\\n  TableCaption,\\n}\\n","tabs":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as TabsPrimitive from \\"@radix-ui/react-tabs\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Tabs = TabsPrimitive.Root\\n\\nconst TabsList = React.forwardRef<\\n  React.ElementRef<typeof TabsPrimitive.List>,\\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\\n>(({ className, ...props }, ref) => (\\n  <TabsPrimitive.List\\n    ref={ref}\\n    className={cn(\\n      \\"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTabsList.displayName = TabsPrimitive.List.displayName\\n\\nconst TabsTrigger = React.forwardRef<\\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\\n>(({ className, ...props }, ref) => (\\n  <TabsPrimitive.Trigger\\n    ref={ref}\\n    className={cn(\\n      \\"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\\n\\nconst TabsContent = React.forwardRef<\\n  React.ElementRef<typeof TabsPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\\n>(({ className, ...props }, ref) => (\\n  <TabsPrimitive.Content\\n    ref={ref}\\n    className={cn(\\n      \\"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTabsContent.displayName = TabsPrimitive.Content.displayName\\n\\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\\n","textarea":"import * as React from \\"react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst Textarea = React.forwardRef<\\n  HTMLTextAreaElement,\\n  React.ComponentProps<\\"textarea\\">\\n>(({ className, ...props }, ref) => {\\n  return (\\n    <textarea\\n      className={cn(\\n        \\"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\\",\\n        className\\n      )}\\n      ref={ref}\\n      {...props}\\n    />\\n  )\\n})\\nTextarea.displayName = \\"Textarea\\"\\n\\nexport { Textarea }\\n","toast":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as ToastPrimitives from \\"@radix-ui/react-toast\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\nimport { X } from \\"lucide-react\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst ToastProvider = ToastPrimitives.Provider\\n\\nconst ToastViewport = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\\n>(({ className, ...props }, ref) => (\\n  <ToastPrimitives.Viewport\\n    ref={ref}\\n    className={cn(\\n      \\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\\n\\nconst toastVariants = cva(\\n  \\"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"border bg-background text-foreground\\",\\n        destructive:\\n          \\"destructive group border-destructive bg-destructive text-destructive-foreground\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n    },\\n  }\\n)\\n\\nconst Toast = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Root>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\\n    VariantProps<typeof toastVariants>\\n>(({ className, variant, ...props }, ref) => {\\n  return (\\n    <ToastPrimitives.Root\\n      ref={ref}\\n      className={cn(toastVariants({ variant }), className)}\\n      {...props}\\n    />\\n  )\\n})\\nToast.displayName = ToastPrimitives.Root.displayName\\n\\nconst ToastAction = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Action>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\\n>(({ className, ...props }, ref) => (\\n  <ToastPrimitives.Action\\n    ref={ref}\\n    className={cn(\\n      \\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nToastAction.displayName = ToastPrimitives.Action.displayName\\n\\nconst ToastClose = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Close>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\\n>(({ className, ...props }, ref) => (\\n  <ToastPrimitives.Close\\n    ref={ref}\\n    className={cn(\\n      \\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\\",\\n      className\\n    )}\\n    toast-close=\\"\\"\\n    {...props}\\n  >\\n    <X className=\\"h-4 w-4\\" />\\n  </ToastPrimitives.Close>\\n))\\nToastClose.displayName = ToastPrimitives.Close.displayName\\n\\nconst ToastTitle = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Title>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\\n>(({ className, ...props }, ref) => (\\n  <ToastPrimitives.Title\\n    ref={ref}\\n    className={cn(\\"text-sm font-semibold\\", className)}\\n    {...props}\\n  />\\n))\\nToastTitle.displayName = ToastPrimitives.Title.displayName\\n\\nconst ToastDescription = React.forwardRef<\\n  React.ElementRef<typeof ToastPrimitives.Description>,\\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\\n>(({ className, ...props }, ref) => (\\n  <ToastPrimitives.Description\\n    ref={ref}\\n    className={cn(\\"text-sm opacity-90\\", className)}\\n    {...props}\\n  />\\n))\\nToastDescription.displayName = ToastPrimitives.Description.displayName\\n\\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\\n\\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\\n\\nexport {\\n  type ToastProps,\\n  type ToastActionElement,\\n  ToastProvider,\\n  ToastViewport,\\n  Toast,\\n  ToastTitle,\\n  ToastDescription,\\n  ToastClose,\\n  ToastAction,\\n}\\n","toaster":"\\"use client\\"\\n\\nimport { useToast } from \\"@/hooks/use-toast\\"\\nimport {\\n  Toast,\\n  ToastClose,\\n  ToastDescription,\\n  ToastProvider,\\n  ToastTitle,\\n  ToastViewport,\\n} from \\"@/components/ui/toast\\"\\n\\nexport function Toaster() {\\n  const { toasts } = useToast()\\n\\n  return (\\n    <ToastProvider>\\n      {toasts.map(function ({ id, title, description, action, ...props }) {\\n        return (\\n          <Toast key={id} {...props}>\\n            <div className=\\"grid gap-1\\">\\n              {title && <ToastTitle>{title}</ToastTitle>}\\n              {description && (\\n                <ToastDescription>{description}</ToastDescription>\\n              )}\\n            </div>\\n            {action}\\n            <ToastClose />\\n          </Toast>\\n        )\\n      })}\\n      <ToastViewport />\\n    </ToastProvider>\\n  )\\n}\\n","toggle-group":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as ToggleGroupPrimitive from \\"@radix-ui/react-toggle-group\\"\\nimport { type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\nimport { toggleVariants } from \\"@/components/ui/toggle\\"\\n\\nconst ToggleGroupContext = React.createContext<\\n  VariantProps<typeof toggleVariants>\\n>({\\n  size: \\"default\\",\\n  variant: \\"default\\",\\n})\\n\\nconst ToggleGroup = React.forwardRef<\\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\\n    VariantProps<typeof toggleVariants>\\n>(({ className, variant, size, children, ...props }, ref) => (\\n  <ToggleGroupPrimitive.Root\\n    ref={ref}\\n    className={cn(\\"flex items-center justify-center gap-1\\", className)}\\n    {...props}\\n  >\\n    <ToggleGroupContext.Provider value={{ variant, size }}>\\n      {children}\\n    </ToggleGroupContext.Provider>\\n  </ToggleGroupPrimitive.Root>\\n))\\n\\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\\n\\nconst ToggleGroupItem = React.forwardRef<\\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\\n    VariantProps<typeof toggleVariants>\\n>(({ className, children, variant, size, ...props }, ref) => {\\n  const context = React.useContext(ToggleGroupContext)\\n\\n  return (\\n    <ToggleGroupPrimitive.Item\\n      ref={ref}\\n      className={cn(\\n        toggleVariants({\\n          variant: context.variant || variant,\\n          size: context.size || size,\\n        }),\\n        className\\n      )}\\n      {...props}\\n    >\\n      {children}\\n    </ToggleGroupPrimitive.Item>\\n  )\\n})\\n\\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\\n\\nexport { ToggleGroup, ToggleGroupItem }\\n","toggle":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as TogglePrimitive from \\"@radix-ui/react-toggle\\"\\nimport { cva, type VariantProps } from \\"class-variance-authority\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst toggleVariants = cva(\\n  \\"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\\",\\n  {\\n    variants: {\\n      variant: {\\n        default: \\"bg-transparent\\",\\n        outline:\\n          \\"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\\",\\n      },\\n      size: {\\n        default: \\"h-10 px-3 min-w-10\\",\\n        sm: \\"h-9 px-2.5 min-w-9\\",\\n        lg: \\"h-11 px-5 min-w-11\\",\\n      },\\n    },\\n    defaultVariants: {\\n      variant: \\"default\\",\\n      size: \\"default\\",\\n    },\\n  }\\n)\\n\\nconst Toggle = React.forwardRef<\\n  React.ElementRef<typeof TogglePrimitive.Root>,\\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\\n    VariantProps<typeof toggleVariants>\\n>(({ className, variant, size, ...props }, ref) => (\\n  <TogglePrimitive.Root\\n    ref={ref}\\n    className={cn(toggleVariants({ variant, size, className }))}\\n    {...props}\\n  />\\n))\\n\\nToggle.displayName = TogglePrimitive.Root.displayName\\n\\nexport { Toggle, toggleVariants }\\n","tooltip":"\\"use client\\"\\n\\nimport * as React from \\"react\\"\\nimport * as TooltipPrimitive from \\"@radix-ui/react-tooltip\\"\\n\\nimport { cn } from \\"@/lib/utils\\"\\n\\nconst TooltipProvider = TooltipPrimitive.Provider\\n\\nconst Tooltip = TooltipPrimitive.Root\\n\\nconst TooltipTrigger = TooltipPrimitive.Trigger\\n\\nconst TooltipContent = React.forwardRef<\\n  React.ElementRef<typeof TooltipPrimitive.Content>,\\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\\n>(({ className, sideOffset = 4, ...props }, ref) => (\\n  <TooltipPrimitive.Content\\n    ref={ref}\\n    sideOffset={sideOffset}\\n    className={cn(\\n      \\"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\\",\\n      className\\n    )}\\n    {...props}\\n  />\\n))\\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\\n\\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\\n","use-mobile":"import * as React from \\"react\\"\\n\\nconst MOBILE_BREAKPOINT = 768\\n\\nexport function useIsMobile() {\\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\\n\\n  React.useEffect(() => {\\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\\n    const onChange = () => {\\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\\n    }\\n    mql.addEventListener(\\"change\\", onChange)\\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\\n    return () => mql.removeEventListener(\\"change\\", onChange)\\n  }, [])\\n\\n  return !!isMobile\\n}\\n"}'),E=async e=>{let{code:n,demoCode:t,baseTailwindConfig:a,baseGlobalCss:r,dependencies:o,customTailwindConfig:i,customGlobalCss:s}=e,l=await fetch("https://21.up.railway.app/compile-css",{method:"POST",body:JSON.stringify({code:n,demoCode:t,baseTailwindConfig:a,baseGlobalCss:r,dependencies:o,customTailwindConfig:i,customGlobalCss:s})});return(await l.json()).css},L=Object.keys(I).reduce((e,n)=>(e["/components/ui/".concat(n,".tsx")]=I[n],e),{}),A='module.exports = {\n    darkMode: ["class"],\n    content: ["**/*.{ts,tsx}"],\n    theme: {\n      extend: {\n        colors: {\n          border: "hsl(var(--border))",\n          input: "hsl(var(--input))",\n          ring: "hsl(var(--ring))",\n          background: "hsl(var(--background))",\n          foreground: "hsl(var(--foreground))",\n          primary: {\n            DEFAULT: "hsl(var(--primary))",\n            foreground: "hsl(var(--primary-foreground))"\n          },\n          secondary: {\n            DEFAULT: "hsl(var(--secondary))",\n            foreground: "hsl(var(--secondary-foreground))",\n          },\n          destructive: {\n            DEFAULT: "hsl(var(--destructive))",\n            foreground: "hsl(var(--destructive-foreground))",\n          },\n          muted: {\n            DEFAULT: "hsl(var(--muted))",\n            foreground: "hsl(var(--muted-foreground))"\n          },\n          accent: {\n            DEFAULT: "hsl(var(--accent))",\n            foreground: "hsl(var(--accent-foreground))"\n          },\n          popover: {\n            DEFAULT: "hsl(var(--popover))",\n            foreground: "hsl(var(--popover-foreground))"\n          },\n          card: {\n            DEFAULT: "hsl(var(--card))",\n            foreground: "hsl(var(--card-foreground))"\n          }\n        },\n        borderRadius: {\n          lg: "var(--radius)",\n          md: "calc(var(--radius) - 2px)",\n          sm: "calc(var(--radius) - 4px)"\n        }\n      }\n    },\n    plugins: []\n  }',j="\n  @tailwind base;\n  @tailwind components;\n  @tailwind utilities;\n  \n  @keyframes ripple {\n    0% {\n      opacity: 0;\n      background-size: 0 0;\n      transform: scale(0.1);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 0%,\n        transparent 2%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 0%,\n        transparent 2%,\n        transparent 100%\n      );\n    }\n    \n    10% {\n      opacity: 1;\n      background-size: 16px 16px;\n      transform: scale(0.2);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 8%,\n        transparent 12%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 8%,\n        transparent 12%,\n        transparent 100%\n      );\n    }\n    \n    20% {\n      transform: scale(0.3);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 18%,\n        transparent 22%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 18%,\n        transparent 22%,\n        transparent 100%\n      );\n    }\n    \n    30% {\n      transform: scale(0.4);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 28%,\n        transparent 32%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        black 0%,\n        black 28%,\n        transparent 32%,\n        transparent 100%\n      );\n    }\n    \n    40% {\n      transform: scale(0.5);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 38%,\n        transparent 42%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 38%,\n        transparent 42%,\n        transparent 100%\n      );\n    }\n    \n    50% {\n      transform: scale(0.6);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 48%,\n        transparent 52%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 48%,\n        transparent 52%,\n        transparent 100%\n      );\n    }\n    \n    60% {\n      transform: scale(0.7);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 58%,\n        transparent 62%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 58%,\n        transparent 62%,\n        transparent 100%\n      );\n    }\n    \n    70% {\n      transform: scale(0.8);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 68%,\n        transparent 72%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 68%,\n        transparent 72%,\n        transparent 100%\n      );\n    }\n    \n    80% {\n      transform: scale(0.9);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 78%,\n        transparent 82%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 78%,\n        transparent 82%,\n        transparent 100%\n      );\n    }\n    \n    90% {\n      transform: scale(0.95);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 88%,\n        transparent 92%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        black 88%,\n        transparent 92%,\n        transparent 100%\n      );\n    }\n  \n    100% {\n      opacity: 0;\n      background-size: 0 0;\n      transform: scale(1);\n      -webkit-mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        transparent 100%\n      );\n      mask-image: radial-gradient(\n        circle at center,\n        transparent 0%,\n        transparent 100%\n      );\n    }\n  }\n  \n  @keyframes ripple-dark {\n    0% {\n      background-image: radial-gradient(\n        circle at center,\n        rgba(255, 255, 255, 0.13) 0%,\n        rgba(255, 255, 255, 0) 5%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n    \n    25% {\n      background-image: radial-gradient(\n        circle at center,\n        rgba(255, 255, 255, 0.13) 0%,\n        rgba(255, 255, 255, 0.13) 15%,\n        rgba(255, 255, 255, 0) 25%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n    \n    50% {\n      background-image: radial-gradient(\n        circle at center,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0.13) 35%,\n        rgba(255, 255, 255, 0.13) 45%,\n        rgba(255, 255, 255, 0) 55%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n    \n    75% {\n      background-image: radial-gradient(\n        circle at center,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 45%,\n        rgba(255, 255, 255, 0.13) 75%,\n        rgba(255, 255, 255, 0.13) 85%,\n        rgba(255, 255, 255, 0) 95%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n  \n    100% {\n      background-image: radial-gradient(\n        circle at center,\n        rgba(255, 255, 255, 0) 0%,\n        rgba(255, 255, 255, 0) 100%\n      );\n    }\n  }\n  \n  .lab-bg {\n    --mask-offset: 100px;\n    -webkit-mask: linear-gradient(to bottom,transparent,#fff var(--mask-offset) calc(100% - var(--mask-offset)),transparent),linear-gradient(to right,transparent,#fff var(--mask-offset) calc(100% - var(--mask-offset)),transparent);\n    mask: linear-gradient(to bottom,transparent,#fff var(--mask-offset) calc(100% - var(--mask-offset)),transparent),linear-gradient(to right,transparent,#fff var(--mask-offset) calc(100% - var(--mask-offset)),transparent);\n    -webkit-mask-composite: source-in,xor;\n    mask-composite: intersect;\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000;\n  }\n  \n  .lab-bg::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    background-image: radial-gradient(#00000021 1px, transparent 1px);\n    -webkit-mask-image: radial-gradient(circle at center, transparent 0%, transparent 100%);\n    mask-image: radial-gradient(circle at center, transparent 0%, transparent 100%);\n    animation: ripple 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;\n    will-change: transform, mask-image, -webkit-mask-image, background-size, opacity;\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000;\n  }\n  \n  .dark .lab-bg::before {\n    background-image: radial-gradient(#ffffff22 1px, transparent 1px);\n  }\n  \n  html,\n  body {\n    max-width: 100vw;\n  }\n  \n  * {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n  \n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  \n  @layer base {\n    :root {\n      --background: 0 0% 100%;\n      --foreground: 240 10% 3.9%;\n      --card: 0 0% 100%;\n      --card-foreground: 240 10% 3.9%;\n      --popover: 0 0% 100%;\n      --popover-foreground: 240 10% 3.9%;\n      --primary: 240 5.9% 10%;\n      --primary-foreground: 0 0% 98%;\n      --secondary: 240 4.8% 95.9%;\n      --secondary-foreground: 240 5.9% 10%;\n      --muted: 240 4.8% 95.9%;\n      --muted-foreground: 240 3.8% 46.1%;\n      --accent: 240 4.8% 95.9%;\n      --accent-foreground: 240 5.9% 10%;\n      --destructive: 0 84.2% 60.2%;\n      --destructive-foreground: 0 0% 100%;\n      --border: 240 5.9% 90%;\n      --input: 240 4.9% 83.9%;\n      --ring: 240 5% 64.9%;\n      --radius: 0.5rem;\n    }\n   \n    .dark {\n      --background: 240 10% 3.9%;\n      --foreground: 240 4.8% 95.9%;\n      --card: 240 10% 3.9%;\n      --card-foreground: 0 0% 98%;\n      --popover: 240 10% 3.9%;\n      --popover-foreground: 0 0% 98%;\n      --primary: 0 0% 98%;\n      --primary-foreground: 240 5.9% 10%;\n      --secondary: 240 3.7% 15.9%;\n      --secondary-foreground: 0 0% 98%;\n      --muted: 240 5.9% 10%;\n      --muted-foreground: 240 4.4% 58%;\n      --accent: 240 5.9% 10%;\n      --accent-foreground: 0 0% 98%;\n      --destructive: 0 84.2% 60.2%;\n      --destructive-foreground: 0 0% 100%;\n      --border: 240 3.7% 15.9%;\n      --input: 240 3.7% 15.9%;\n      --ring: 240 3.8% 46.1%;\n    }\n  }\n  \n  @layer base {\n    * {\n      @apply border-border;\n    }\n    body {\n      @apply font-sans antialiased bg-background text-foreground;\n    }\n  }\n  ";async function H(e){let{files:n,theme:t,customTailwindConfig:a,customGlobalCss:r,dependencies:o}=e,i=await E({code:n["/demo.tsx"],demoCode:Object.values(L).join("\n"),baseTailwindConfig:A,baseGlobalCss:j,customTailwindConfig:a,customGlobalCss:r});return{...n,"/App.tsx":"\n  import React from 'react';\n  import { ThemeProvider } from './next-themes';\n  import { RouterProvider } from 'next/router';\n  import './styles.css';\n  import Demo from './demo';\n  \n  export default function App() {\n  \n    return (\n      <ThemeProvider attribute=\"class\" defaultTheme=\"".concat(t,'" enableSystem={false}>\n        <RouterProvider>\n          <div className="relative flex items-center justify-center h-screen w-full m-auto p-16 bg-background text-foreground">\n            <div className="absolute lab-bg inset-0 size-full">\n              <div className="absolute inset-0 bg-[radial-gradient(#00000021_1px,transparent_1px)] dark:bg-[radial-gradient(#ffffff22_1px,transparent_1px)]"></div>\n            </div>\n            <div style={{ marginTop: "48px" }} className="flex w-full justify-center relative">\n              <Demo />\n            </div>\n          </div>\n        </RouterProvider>\n      </ThemeProvider>\n    );\n  }\n  '),"/next-themes.tsx":"\n  import React, { createContext, useContext, useState, useEffect } from 'react';\n  \n  const ThemeContext = createContext({\n    theme: 'light',\n    setTheme: (theme: string) => {},\n    resolvedTheme: 'light',\n  });\n  \n  export const useTheme = () => useContext(ThemeContext);\n  \n  export const ThemeProvider = ({ children, defaultTheme = 'light', enableSystem = false }) => {\n    const [theme, setTheme] = useState(defaultTheme);\n  \n    useEffect(() => {\n      const root = window.document.documentElement;\n      root.classList.remove('light', 'dark');\n      root.classList.add(theme);\n    }, [theme]);\n  \n    const resolvedTheme = theme === 'system' ? 'light' : theme;\n  \n    return (\n      <ThemeContext.Provider value={{ theme, setTheme, resolvedTheme }}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  };\n  ","/hooks/use-media-query.tsx":'\n  import * as React from "react"\n  \n  export function useMediaQuery(query: string) {\n    const [value, setValue] = React.useState(false)\n  \n    React.useEffect(() => {\n      function onChange(event: MediaQueryListEvent) {\n        setValue(event.matches)\n      }\n  \n      const result = matchMedia(query)\n      result.addEventListener("change", onChange)\n      setValue(result.matches)\n  \n      return () => result.removeEventListener("change", onChange)\n    }, [query])\n  \n    return value\n  }\n  ',"/lib/utils.ts":'\n  import { type ClassValue, clsx } from "clsx"\n  import { twMerge } from "tailwind-merge"\n  \n  export function cn(...inputs: ClassValue[]) {\n    return twMerge(clsx(inputs))\n  }\n  ',"/node_modules/next/package.json":'     {\n       "name": "next",\n       "version": "latest",\n       "main": "index.js"\n     }\n     ',"/node_modules/next/index.js":"\n        export { default as Image } from './image';\n        export { default as Link } from './link';\n        export { useRouter, RouterProvider, usePathname } from './router';\n        export { default as Head } from './head';\n        export { default as Script } from './script';\n        export { default as dynamic } from './dynamic';\n        export { Roboto } from './font';\n        export { default as Document } from './document';\n      ","/node_modules/next/image.js":"\n        import React from 'react';\n        \n        const Image = ({ src, alt, width, height, ...props }) => (\n          <img src={src} alt={alt} width={width} height={height} {...props} />\n        );\n        \n        export default Image;\n      ","/node_modules/next/link.js":"\n        import React from 'react';\n        \n        const Link = ({ href, children, ...props }) => (\n          <a href={href} {...props}>{children}</a>\n        );\n        \n        export default Link;\n      ","/node_modules/next/head.js":"\n        import React from 'react';\n        \n        const Head = ({ children }) => {\n          return <div>{children}</div>;\n        };\n        \n        export default Head;\n      ","/node_modules/next/script.js":"\n        import React from 'react';\n        \n        const Script = ({ src, strategy, children, ...props }) => {\n          return <script src={src} {...props}>{children}<\/script>;\n        };\n        \n        export default Script;\n      ","/node_modules/next/router.js":"\n        import React, { createContext, useContext } from 'react';\n        \n        const RouterContext = createContext({\n          pathname: '/',\n          push: (url) => {},\n          replace: (url) => {},\n        });\n        \n        export const useRouter = () => useContext(RouterContext);\n        \n        export const usePathname = () => {\n          const router = useRouter();\n          return router.pathname;\n        };\n        \n        export const RouterProvider = ({ children }) => {\n          const router = {\n            pathname: '/',\n            push: (url) => {\n              console.log(`Navigating to ${url}`);\n            },\n            replace: (url) => {\n              console.log(`Replacing with ${url}`);\n            },\n          };\n          \n          return (\n            <RouterContext.Provider value={router}>\n              {children}\n            </RouterContext.Provider>\n          );\n        };\n      ","/node_modules/next/dynamic.js":"\n        import React, { Suspense } from 'react';\n        \n        const dynamic = (importFunc, options = {}) => {\n          const { ssr = true, loading: LoadingComponent = () => <div>Loading...</div> } = options;\n          \n          const LazyComponent = React.lazy(importFunc);\n          \n          return (props) => (\n            <Suspense fallback={<LoadingComponent />}>\n              <LazyComponent {...props} />\n            </Suspense>\n          );\n        };\n        \n        export default dynamic;\n      ","/node_modules/next/font.js":"\n        export const Roboto = {\n          className: 'font-roboto',\n        };\n      ","/node_modules/next/document.js":"\n        import React from 'react';\n        \n        const Html = ({ children, ...props }) => <html {...props}>{children}</html>;\n        const Head = ({ children }) => <head>{children}</head>;\n        const Main = () => <div id=\"__next\"></div>;\n        const NextScript = () => <script />;\n        \n        export default function Document() {\n          return (\n            <Html>\n              <Head />\n              <body>\n                <Main />\n                <NextScript />\n              </body>\n            </Html>\n          );\n        }\n      ","/node_modules/next/navigation.js":"\n        export { usePathname } from './router';\n      ","/globals.css":null!=r?r:j,"/styles.css":i,"/tailwind.config.js":null!=a?a:A,"/postcss.config.js":"module.exports = {\n        plugins: {\n          tailwindcss: {},\n          autoprefixer: {},\n        },\n    }",...L,"/tsconfig.json":JSON.stringify({compilerOptions:{jsx:"react-jsx",esModuleInterop:!0,baseUrl:".",paths:{"@/*":["./*"]}}},null,2),"vite.config.ts":"\nimport { defineConfig } from 'vite'\nimport react from '@vitejs/plugin-react'\nimport path from 'path'\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  resolve: {\n    alias: {\n      '@': path.resolve(__dirname, './'),\n    },\n  },\n})"}}let z={react:"^18.0.0","react-dom":"^18.0.0","tailwind-merge":"latest",clsx:"latest",tailwindcss:"^3.4.11","lucide-react":"latest",postcss:"^8.4.31",autoprefixer:"^10.4.16"};var _=t(30260),F=t(30701),O=t(46038);let B={"@hookform/resolvers":"^3.9.1","@radix-ui/react-accordion":"^1.2.2","@radix-ui/react-alert-dialog":"^1.1.4","@radix-ui/react-aspect-ratio":"^1.1.1","@radix-ui/react-avatar":"^1.1.2","@radix-ui/react-checkbox":"^1.1.3","@radix-ui/react-collapsible":"^1.1.2","@radix-ui/react-context-menu":"^2.2.4","@radix-ui/react-dialog":"^1.1.4","@radix-ui/react-dropdown-menu":"^2.1.4","@radix-ui/react-hover-card":"^1.1.4","@radix-ui/react-label":"^2.1.1","@radix-ui/react-menubar":"^1.1.4","@radix-ui/react-navigation-menu":"^1.2.3","@radix-ui/react-popover":"^1.1.4","@radix-ui/react-progress":"^1.1.1","@radix-ui/react-radio-group":"^1.2.2","@radix-ui/react-scroll-area":"^1.2.2","@radix-ui/react-select":"^2.1.4","@radix-ui/react-separator":"^1.1.1","@radix-ui/react-slider":"^1.2.2","@radix-ui/react-slot":"^1.1.1","@radix-ui/react-switch":"^1.1.2","@radix-ui/react-tabs":"^1.1.2","@radix-ui/react-toast":"^1.2.4","@radix-ui/react-toggle":"^1.1.1","@radix-ui/react-toggle-group":"^1.1.1","@radix-ui/react-tooltip":"^1.1.6",autoprefixer:"^10.4.20","class-variance-authority":"^0.7.1",clsx:"^2.1.1",cmdk:"1.0.4","date-fns":"4.1.0","embla-carousel-react":"8.5.1","input-otp":"1.4.1","lucide-react":"^0.454.0",next:"15.2.4","next-themes":"^0.4.4",react:"^19","react-dom":"^19","react-day-picker":"8.10.1","react-hook-form":"^7.54.1","react-resizable-panels":"^2.1.7",recharts:"2.15.0",sonner:"^1.7.1","tailwind-merge":"^2.5.5","tailwindcss-animate":"^1.0.7",vaul:"^0.9.6",zod:"^3.24.1"};function V(e){let n={};try{let t=(0,_.parse)(e,{sourceType:"module",plugins:["typescript","jsx","decorators-legacy","classProperties","objectRestSpread","dynamicImport"],errorRecovery:!0,tokens:!0}),a=Object.keys(z),r=e=>!a.includes(e)&&!e.startsWith("next");(0,F.default)(t,{ImportDeclaration(e){let{node:t}=e,a=t.source.value;if("string"==typeof a&&!a.startsWith(".")&&!a.startsWith("/")&&!a.startsWith("@/")){let e=a;"motion/react"===e&&(e="motion"),r(e)&&(n[e]=e in B?B[e]:"latest")}},ImportNamespaceSpecifier(e){let t=e.findParent(e=>e.isImportDeclaration());if(t&&O.isImportDeclaration(t.node)){let e=t.node.source.value;if("string"==typeof e&&!e.startsWith(".")&&!e.startsWith("/")&&!e.startsWith("@/")){let t=e;"motion/react"===t&&(t="motion"),r(t)&&(n[t]=t in B?B[t]:"latest")}}}})}catch(e){console.error("Error parsing dependencies:",e)}return n}var W=t(25776);let G=e=>{let{size:n="md",className:t}=e;return(0,a.jsx)("div",{className:"flex items-center justify-center",children:(0,a.jsx)("div",{className:d("animate-spin rounded-full border-t-transparent",{sm:"h-4 w-4 border-2",md:"h-8 w-8 border-3",lg:"h-12 w-12 border-4"}[n],"border-primary",t)})})},K=e=>{let{text:n,spinnerSize:t="md",className:r,fullscreen:o=!1}=e;return(0,a.jsxs)("div",{className:d("flex flex-col items-center justify-center gap-3",o&&"fixed inset-0 z-50 bg-background/80 backdrop-blur-sm",r),children:[(0,a.jsx)(G,{size:t}),n&&(0,a.jsx)("p",{className:"text-sm text-muted-foreground animate-pulse",children:n})]})};var U=t(45084),$=t(87691);function q(e){let{setError:n}=e,{sandpack:t}=(0,W.ny)(),{error:a}=t;return(0,r.useEffect)(()=>{(null==a?void 0:a.message)&&n("Error: ".concat(a.message,"\nPath: ").concat(a.path,"\nLine: ").concat(a.line,"\nColumn: ").concat(a.column,"\nTitle: ").concat(a.title,"\n"))},[a]),null}let X="import React from 'react';\n\n  export default function Demo() {\n    return <divNo components were loaded</div>;\n  }\n";function Z(e){let{code:n,callbackId:t,viewMode:o="preview"}=e,{resolvedTheme:i}=(0,v.D)(),[l,c]=(0,r.useState)(null),[d,p]=(0,r.useState)(!1),[f,u]=(0,r.useState)(n),[g,b]=(0,r.useState)({}),[h,x]=(0,r.useState)(!0),R=(0,r.useRef)(0);(0,r.useEffect)(()=>{f&&l&&t&&!d&&R.current<3&&(console.log("Sandpack Error Detected:",l),p(!0),R.current+=1,(async()=>{try{console.log("Attempting to fix code... (Attempt ".concat(R.current,"/3)"));let e=await s(t,{code:f,errorMessage:l});if(null==e?void 0:e.fixedCode){console.log("Fixed code received");let n=m(e.fixedCode);u(n),c(null)}}catch(e){console.error("Error calling fixCodeError API:",e)}finally{setTimeout(()=>p(!1),1e3)}})())},[l,f,t,d]),(0,r.useEffect)(()=>{u(n||X)},[n]);let y=(0,r.useMemo)(()=>V(f||X),[f]),N=(0,r.useMemo)(()=>(function(e){let n={};return Object.values(e).forEach(e=>{try{let t=V(e);Object.assign(n,t)}catch(e){console.error("Error extracting dependencies from file:",e)}}),n})(L),[]);(0,r.useEffect)(()=>{x(!0),async function(){b(await H({files:{"/demo.tsx":f||""},theme:i})),x(!1)}()},[f,i]);let P={theme:i,template:R.current>0?"vite-react-ts":"react-ts",files:g,customSetup:{dependencies:{...z,...N,...y}},options:{activeFile:"/demo.tsx"}};return d?(0,a.jsx)(K,{text:"Fixing code",spinnerSize:"md",className:"h-full"}):h||!f?(0,a.jsx)(K,{text:"Preparing sandbox environment",spinnerSize:"md",className:"h-full"}):(0,a.jsxs)(W.l5,{...P,children:[(0,a.jsxs)("div",{className:"relative h-full",children:[(0,a.jsx)("div",{className:"absolute inset-0",children:(0,a.jsx)(W.G5,{showOpenInCodeSandbox:!1,showRefreshButton:!1,showRestartButton:!1,showSandpackErrorOverlay:!1,showOpenNewtab:!1})}),(0,a.jsx)(U.N,{children:"code"===o&&(0,a.jsx)($.P.div,{className:"absolute inset-0 bg-background pt-10",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},transition:{duration:.2},children:(0,a.jsx)(W.cW,{showTabs:!1,showLineNumbers:!0,showInlineErrors:!0,readOnly:!0,showRunButton:!1,showReadOnly:!1})})})]}),(0,a.jsx)(q,{setError:c})]})}var J=t(46767),Q=t(52280),Y=t(14738);function ee(e){let{previewSize:n,onChangePreviewSize:t}=e;return(0,a.jsxs)("div",{className:"flex bg-muted rounded-lg p-0.5",children:["desktop"!==n&&(0,a.jsx)("div",{className:"absolute -left-24 top-0 bg-background/80 backdrop-blur-sm px-2 py-1 rounded-md shadow-sm border text-xs font-medium",children:"mobile"===n?"375px":"768px"}),(0,a.jsxs)("div",{className:"flex items-center gap-0.5",children:[(0,a.jsx)(x,{variant:"ghost",size:"sm",className:d("h-7 w-7 rounded-md transition-colors hover:bg-background/70 hover:text-foreground","mobile"===n&&"bg-background text-foreground"),onClick:e=>{e.stopPropagation(),t("mobile")},children:(0,a.jsx)(J.A,{className:"h-4 w-4"})}),(0,a.jsx)(x,{variant:"ghost",size:"sm",className:d("h-7 w-7 rounded-md transition-colors hover:bg-background/70 hover:text-foreground","tablet"===n&&"bg-background text-foreground"),onClick:e=>{e.stopPropagation(),t("tablet")},children:(0,a.jsx)(Q.A,{className:"h-4 w-4"})}),(0,a.jsx)(x,{variant:"ghost",size:"sm",className:d("h-7 w-7 rounded-md transition-colors hover:bg-background/70 hover:text-foreground","desktop"===n&&"bg-background text-foreground"),onClick:e=>{e.stopPropagation(),t("desktop")},children:(0,a.jsx)(Y.A,{className:"h-4 w-4"})})]})]})}var en=t(56671);function et(e){let{index:n,code:t,callbackId:r,isFocused:o,isFullscreen:i,viewMode:s,previewSize:l,onFocus:c,onToggleFullscreen:m,onToggleViewMode:p,onChangePreviewSize:f}=e,u=(()=>{switch(l){case"mobile":return{width:"375px",maxWidth:"100%"};case"tablet":return{width:"768px",maxWidth:"100%"};default:return{width:"100%",maxWidth:"100%"}}})(),g=i===n;return(0,a.jsx)("div",{className:d("flex flex-col h-full",i!==n&&null!==i&&"opacity-0 pointer-events-none"),children:(0,a.jsxs)(C,{className:d("flex-1 border overflow-hidden",o&&!g?"ring-2 ring-primary":"","relative",g?"fixed left-4 right-4 bottom-4 top-[72px] z-50 rounded-lg border":"min-h-[500px]","[transition:transform_700ms_cubic-bezier(0.32,0.72,0,1),width_700ms_cubic-bezier(0.32,0.72,0,1),left_700ms_cubic-bezier(0.32,0.72,0,1),right_700ms_cubic-bezier(0.32,0.72,0,1)]"),onClick:()=>c(n),children:[(0,a.jsx)("div",{className:"absolute top-2 left-2 z-10",children:(0,a.jsxs)("div",{className:"flex items-center justify-center px-2.5 h-6 rounded-sm bg-primary/10 text-primary font-medium text-sm",children:["Variant ",n]})}),(0,a.jsxs)("div",{className:"absolute top-2 right-2 z-10 flex gap-2",children:[g&&"code"!==s&&(0,a.jsx)(ee,{previewSize:l,onChangePreviewSize:f}),"code"===s&&t&&(0,a.jsx)(x,{variant:"outline",size:"icon",onClick:e=>{e.stopPropagation(),navigator.clipboard.writeText(t),en.o.success("Code copied from Variant ".concat(n))},children:(0,a.jsx)(S.A,{className:"h-4 w-4"})}),(0,a.jsx)(x,{variant:"outline",size:"icon",onClick:e=>{e.stopPropagation(),p()},children:"code"===s?(0,a.jsx)(T.A,{className:"h-4 w-4"}):(0,a.jsx)(M.A,{className:"h-4 w-4"})}),(0,a.jsx)(x,{variant:"outline",size:"icon",onClick:e=>{e.stopPropagation(),m(n)},children:g?(0,a.jsx)(k.A,{className:"h-4 w-4"}):(0,a.jsx)(D.A,{className:"h-4 w-4"})})]}),(0,a.jsx)(w,{className:"p-0 h-full",children:(0,a.jsx)("div",{className:d("h-full flex items-center justify-center","transition-all duration-500 ease-in-out",g&&"preview"===s&&"desktop"!==l?"bg-muted/30 overflow-auto p-4":"p-0"),children:(0,a.jsx)("div",{className:d("h-full bg-background transition-all duration-500",g&&"preview"===s&&"desktop"!==l?"":"w-full"),style:{...g&&"preview"===s&&{width:"desktop"!==l?u.width:"100%",maxWidth:u.maxWidth,transformOrigin:"center",transition:"width 700ms cubic-bezier(0.32,0.72,0,1), transform 700ms cubic-bezier(0.32,0.72,0,1)"}},children:(0,a.jsx)(Z,{code:t,callbackId:r,isFullscreen:g,viewMode:s})})})})]})})}function ea(){return(0,a.jsx)("div",{className:"flex items-center justify-center h-screen",children:(0,a.jsxs)("div",{className:"animate-pulse flex flex-col items-center",children:[(0,a.jsx)("div",{className:"h-8 w-32 bg-muted rounded mb-4"}),(0,a.jsx)("div",{className:"h-4 w-48 bg-muted rounded"})]})})}function er(e){let{countdown:n}=e;return(0,a.jsx)("div",{className:"flex items-start mt-20 justify-center",children:(0,a.jsxs)("div",{className:"text-center space-y-2",children:[(0,a.jsx)("p",{className:"font-medium text-foreground",children:"Component selected"}),(0,a.jsxs)("p",{className:"text-muted-foreground",children:["You can return to your IDE ",(0,a.jsx)("br",{})," This page will be closed in"," ",n,"..."]})]})})}function eo(e){let{isLoading:n,isSelected:t,countdown:r}=e;return n?(0,a.jsx)(ea,{}):t?(0,a.jsx)(er,{countdown:r}):null}var ei=t(24024),es=t(33096);let el=ei.bL,ec=ei.l9;ei.YJ,ei.ZL,ei.Pb,ei.z6,r.forwardRef((e,n)=>{let{className:t,inset:r,children:o,...i}=e;return(0,a.jsxs)(ei.ZP,{ref:n,className:d("flex cursor-default select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",r&&"pl-8",t),...i,children:[o,(0,a.jsx)(es.vKP,{className:"ml-auto text-muted-foreground/80"})]})}).displayName=ei.ZP.displayName,r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)(ei.G5,{ref:n,className:d("z-50 min-w-40 overflow-hidden rounded-md border border-border bg-popover p-1 text-popover-foreground shadow-lg shadow-black/5 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",t),...r})}).displayName=ei.G5.displayName;let ed=r.forwardRef((e,n)=>{let{className:t,sideOffset:o=4,onPointerDown:i,onPointerDownOutside:s,onCloseAutoFocus:l,...c}=e,m=r.useRef(!1),p=r.useCallback(e=>{m.current=!0,null==i||i(e)},[i]),f=r.useCallback(e=>{m.current=!0,null==s||s(e)},[s]),u=r.useCallback(e=>{if(l)return l(e);m.current&&(e.preventDefault(),m.current=!1)},[l]);return(0,a.jsx)(ei.ZL,{children:(0,a.jsx)(ei.UC,{ref:n,sideOffset:o,className:d("z-50 min-w-40 overflow-hidden rounded-lg border border-border bg-popover p-1 text-popover-foreground shadow-lg shadow-black/5 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",t),onPointerDown:p,onPointerDownOutside:f,onCloseAutoFocus:u,...c})})});ed.displayName=ei.UC.displayName;let em=r.forwardRef((e,n)=>{let{className:t,inset:r,...o}=e;return(0,a.jsx)(ei.q7,{ref:n,className:d("relative flex cursor-default select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0",r&&"pl-8",t),...o})});em.displayName=ei.q7.displayName,r.forwardRef((e,n)=>{let{className:t,children:r,checked:o,...i}=e;return(0,a.jsxs)(ei.H_,{ref:n,className:d("relative flex cursor-default select-none items-center rounded-md py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",t),checked:o,...i,children:[(0,a.jsx)("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:(0,a.jsx)(ei.VF,{children:(0,a.jsx)(es.Srz,{className:"h-4 w-4"})})}),r]})}).displayName=ei.H_.displayName,r.forwardRef((e,n)=>{let{className:t,children:r,...o}=e;return(0,a.jsxs)(ei.hN,{ref:n,className:d("relative flex cursor-default select-none items-center rounded-md py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",t),...o,children:[(0,a.jsx)("span",{className:"absolute left-2 flex h-3.5 w-3.5 items-center justify-center",children:(0,a.jsx)(ei.VF,{children:(0,a.jsx)(es.RiX,{className:"h-2 w-2 fill-current"})})}),r]})}).displayName=ei.hN.displayName;let ep=r.forwardRef((e,n)=>{let{className:t,inset:r,...o}=e;return(0,a.jsx)(ei.JU,{ref:n,className:d("px-2 py-1.5 text-xs font-medium text-muted-foreground",r&&"pl-8",t),...o})});ep.displayName=ei.JU.displayName;let ef=r.forwardRef((e,n)=>{let{className:t,...r}=e;return(0,a.jsx)(ei.wv,{ref:n,className:d("-mx-1 my-1 h-px bg-border",t),...r})});ef.displayName=ei.wv.displayName;var eu=t(94870),eg=t(5560),ev=t(48313),eb=t(81586),eh=t(94788);function ex(e){let{children:n,className:t}=e;return(0,a.jsx)("kbd",{className:d("px-1 py-0.5 min-w-[22px] flex items-center justify-center text-xs text-foreground bg-muted rounded border shadow-sm",t),children:n})}function eR(e){let{label:n,shortcut:t}=e;return(0,a.jsxs)("div",{className:"flex items-center justify-between px-2 py-1 text-sm text-muted-foreground",children:[(0,a.jsx)("span",{children:n}),(0,a.jsx)("div",{className:"flex gap-1",children:t})]})}function ey(e){let{href:n,icon:t,children:r}=e;return(0,a.jsx)(em,{asChild:!0,children:(0,a.jsxs)(f(),{href:n,target:"_blank",rel:"noopener noreferrer",className:"flex items-center justify-between group",children:[(0,a.jsxs)("div",{className:"flex items-center gap-2",children:[(0,a.jsx)(t,{className:"h-4 w-4"}),r]}),(0,a.jsx)(eu.A,{className:"h-4 w-4 opacity-50 transition-transform group-hover:translate-x-0.5 group-hover:-translate-y-0.5"})]})})}function eN(){return(0,a.jsxs)("div",{className:"py-2",children:[(0,a.jsx)(ep,{children:"Keyboard Shortcuts"}),(0,a.jsxs)("div",{className:"mb-2",children:[(0,a.jsx)(eR,{label:"Toggle fullscreen",shortcut:(0,a.jsx)(ex,{children:"F"})}),(0,a.jsx)(eR,{label:"Toggle code view",shortcut:(0,a.jsx)(ex,{children:"C"})}),(0,a.jsx)(eR,{label:"Copy code",shortcut:(0,a.jsx)(a.Fragment,{children:(0,a.jsx)(ex,{children:"⌘ C"})})}),(0,a.jsx)(eR,{label:"Focus variant",shortcut:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(ex,{children:"1"}),(0,a.jsx)(ex,{children:"2"}),(0,a.jsx)(ex,{children:"3"})]})}),(0,a.jsx)(eR,{label:"Move focus",shortcut:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(ex,{children:"Tab"}),(0,a.jsx)(ex,{children:"←"}),(0,a.jsx)(ex,{children:"→"})]})}),(0,a.jsx)(eR,{label:"Select focused",shortcut:(0,a.jsx)(ex,{children:"Enter"})}),(0,a.jsx)(eR,{label:"Show help",shortcut:(0,a.jsx)(ex,{children:"?"})})]}),(0,a.jsx)(ef,{}),(0,a.jsx)(ep,{children:"Actions"}),(0,a.jsx)(ey,{href:"https://discord.gg/Qx4rFunHfm",icon:eg.A,children:"Get Help"}),(0,a.jsx)(ey,{href:"https://21st.dev/magic/console",icon:ev.A,children:"Troubleshooting"}),(0,a.jsx)(ey,{href:"https://21st.dev/settings/billing",icon:eb.A,children:"Manage Subscription"})]})}function eP(e){let{open:n,onOpenChange:t}=e;return(0,a.jsx)("div",{className:"fixed bottom-4 left-4 z-[100]",children:(0,a.jsxs)(el,{open:n,onOpenChange:t,children:[(0,a.jsx)(ec,{asChild:!0,children:(0,a.jsx)(x,{variant:"outline",size:"icon",className:"rounded-full h-10 w-10 shadow-md hover:shadow-lg transition-shadow",children:(0,a.jsx)(eh.A,{className:"h-5 w-5"})})}),(0,a.jsx)(ed,{side:"top",align:"start",className:"w-80",sideOffset:24,children:(0,a.jsx)(eN,{})})]})})}let eC=function(){let[e,n]=(0,r.useState)(null),[t,s]=(0,r.useState)(1),[l,c]=(0,r.useState)("preview"),[p,f]=(0,r.useState)(!1),[u,g]=(0,r.useState)({data1:"",data2:"",data3:""}),[v,b]=(0,r.useState)(!0),[h,x]=(0,r.useState)(null),[R,y]=(0,r.useState)(!1),[N,C]=(0,r.useState)(3),[w,S]=(0,r.useState)("desktop"),[T,M]=(0,r.useState)(!1);(0,r.useEffect)(()=>{{let e=new URLSearchParams(window.location.search).get("id");x(e),e&&k(e)}},[]),(0,r.useEffect)(()=>{let a=a=>{if((a.metaKey||a.ctrlKey)&&"KeyC"===a.code){let e=u["data".concat(t)];e&&(a.preventDefault(),navigator.clipboard.writeText(e),en.o.success("Code copied from Variant ".concat(t)));return}if(!a.metaKey&&!a.ctrlKey&&!a.altKey){if("Slash"===a.code||"IntlRo"===a.code){a.preventDefault(),f(e=>!e);return}if("Escape"===a.code){if(null!==e){n(null),S("desktop");return}if(p)return void f(!1)}if(!p){if(["Digit1","Digit2","Digit3","Numpad1","Numpad2","Numpad3"].includes(a.code)){let n=parseInt(a.code.replace("Digit","").replace("Numpad",""));null!==e?1===n?S("mobile"):2===n?S("tablet"):3===n&&S("desktop"):s(n);return}if("Enter"===a.code||"NumpadEnter"===a.code){a.preventDefault(),D(u["data".concat(t)]);return}if("Tab"===a.code){a.preventDefault();let r=3===t?1:t+1;s(r),null!==e&&n(r);return}if("KeyF"===a.code){a.preventDefault(),I(t);return}if("KeyC"===a.code){a.preventDefault(),c(e=>"code"===e?"preview":"code");return}if("ArrowRight"===a.code){a.preventDefault();let r=3===t?1:t+1;s(r),null!==e&&n(r);return}if("ArrowLeft"===a.code){a.preventDefault();let r=1===t?3:t-1;s(r),null!==e&&n(r);return}}}};return window.addEventListener("keydown",a),()=>window.removeEventListener("keydown",a)},[t,e,u,p,l]);let k=async e=>{try{let n=await o(e),t={};Object.entries(n||{}).forEach(e=>{let[n,a]=e;(null==a?void 0:a.text)&&(t[n]=m(a.text))}),g(t)}catch(e){console.error("Error fetching callback data:",e)}finally{b(!1)}},D=async e=>{if(h)try{await i(h,{code:e}),y(!0);let n=setInterval(()=>{C(e=>e<=1?(clearInterval(n),window.close(),0):e-1)},1e3)}catch(e){console.error("Error sending callback:",e)}},I=t=>{e===t?(n(null),S("desktop")):(M(!0),n(t),setTimeout(()=>{M(!1)},300))},E=()=>{c(e=>"code"===e?"preview":"code")},L=(0,a.jsx)(eo,{isLoading:v,isSelected:R,countdown:N});return v||R?L:(0,a.jsxs)("div",{className:"flex flex-col h-full",children:[(0,a.jsx)(P,{focusedVariant:t,fullscreenVariant:e,onAccept:()=>{D(u["data".concat(t)])}}),(0,a.jsx)("div",{className:"flex-1 flex flex-col bg-background relative p-4",children:(0,a.jsx)("div",{className:d("flex flex-1 h-full relative",null===e&&"gap-6"),children:[1,2,3].map(n=>{let r="data".concat(n);return(0,a.jsx)("div",{className:d("transition-all duration-700 ease-in-out",null===e?"flex-1 w-full md:w-1/3":e===n?d("flex-1 w-full",1===n&&"animate-scale-up-left",2===n&&"animate-scale-up-center",3===n&&"animate-scale-up-right"):"w-0"),children:(0,a.jsx)(et,{index:n,code:u[r],callbackId:h,isFocused:t===n,isFullscreen:e,viewMode:l,previewSize:w,onFocus:s,onToggleFullscreen:I,onToggleViewMode:E,onChangePreviewSize:S})},n)})})}),(0,a.jsx)(eP,{open:p,onOpenChange:f})]})}}},e=>{var n=n=>e(e.s=n);e.O(0,[193,79,554,105,486,122,441,684,358],()=>n(4239)),_N_E=e.O()}]);